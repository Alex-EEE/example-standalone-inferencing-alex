/* Generated by Edge Impulse
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*/

#ifndef _EI_CLASSIFIER_IMPULSE2_MODEL_METADATA_H_
#define _EI_CLASSIFIER_IMPULSE2_MODEL_METADATA_H_

#include <stdint.h>
#include "model_types.h"
#include "tflite-model/impulse2_tflite-trained.h"
#include "edge-impulse-sdk/classifier/ei_run_dsp.h"

const char* impulse_2_categories[] = { "no", "noise", "yes" };

ei_dsp_config_mfcc_t impulse_2_dsp_config_36 = {
    1,
    1,
    13,
    0.02000f,
    0.02000f,
    32,
    256,
    101,
    300,
    0,
    0.98000f,
    1
};

const size_t impulse_2_dsp_blocks_size = 1;
ei_model_dsp_t impulse_2_dsp_blocks[impulse_2_dsp_blocks_size] = {
    { // DSP block 36
        637,
        &extract_mfcc_features,
        (void*)&impulse_2_dsp_config_36
    }
};

const size_t impulse_2_dsp_blocks_i16_size = 0;
ei_model_dsp_i16_t impulse_2_dsp_blocks_i16[impulse_2_dsp_blocks_i16_size] = {

};

ei_impulse_t impulse_2 = {
    3, // uint32_t project_id;
    "EdgeImpulse Inc.", // const char *project_owner;
    "Keyword spotting", // const char *project_name;
    17, // int deploy_version;
    637, // uint32_t nn_input_frame_size;
    16000, // uint32_t raw_sample_count;
    1, // uint32_t raw_samples_per_frame;
    (1 * 16000), // uint32_t dsp_input_frame_size;
    0, // uint32_t input_width;
    0, // uint32_t input_height;
    0.0625, // float interval_ms;
    3, // uint16_t label_count;
    0, // bool has_anomaly;
    16000, // float frequency;
    false, // bool use_quantized_dsp_block;
    false, // bool object_detection;
    0, // uint16_t object_detection_count;
    0.5f, // float object_detection_threshold;
    1, // uint8_t tflite_output_labels_tensor;
    2, // uint8_t tflite_output_score_tensor;
    17766, // uint32_t tflite_arena_size;
    EI_CLASSIFIER_DATATYPE_FLOAT32, // int tflite_input_datatype;
    false, // bool tflite_input_quantized;
    0, // float tflite_input_scale;
    0, // float tflite_input_zeropoint;
    EI_CLASSIFIER_DATATYPE_FLOAT32, // int tflite_output_datatype;
    false, // bool tflite_output_quantized;
    0, // float tflite_output_scale;
    0, // float tflite_output_zeropoint;
    EI_CLASSIFIER_TFLITE, // int inferencing_engine;
    false, // bool compiled;
    true, // bool has_tflite_ops_resolver;
    EI_CLASSIFIER_SENSOR_MICROPHONE, // int sensor;
    (16000 / 4), // int slice_size;
    4, // int slices_per_model_window;
    impulse_2_categories, // const char **categories;
    nullptr, // TfLiteTensor* (*model_input)(int);
    nullptr, // TfLiteTensor* (*model_output)(int);
    nullptr, // TfLiteStatus (*model_init)(void*(*alloc_fnc)(size_t,size_t));
    nullptr, // TfLiteStatus (*model_invoke)();
    nullptr, // TfLiteStatus (*model_reset)(void (*free)(void* ptr));
    impulse_2_dsp_blocks_size, // size_t dsp_blocks_size;
    impulse_2_dsp_blocks, // ei_model_dsp_t **dsp_blocks;
    impulse_2_dsp_blocks_i16_size, // size_t dsp_i16_blocks_size;
    impulse_2_dsp_blocks_i16, // ei_model_dsp_i16_t **dsp_i16_blocks;
    (uint8_t*)impulse_2_trained_tflite, // uint8_t *tflite_file;
    impulse_2_trained_tflite_len // size_t tflite_file_size;
};

#endif // _EI_CLASSIFIER_IMPULSE2_MODEL_METADATA_H_
