/* Generated by Edge Impulse
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
// Generated on: 11.05.2022 20:30:23

#include <stdio.h>
#include <stdlib.h>
#include <vector>
#include "edge-impulse-sdk/tensorflow/lite/c/builtin_op_data.h"
#include "edge-impulse-sdk/tensorflow/lite/c/common.h"
#include "edge-impulse-sdk/tensorflow/lite/micro/micro_mutable_op_resolver.h"
#include "edge-impulse-sdk/porting/ei_classifier_porting.h"

#if EI_CLASSIFIER_PRINT_STATE
#if defined(__cplusplus) && EI_C_LINKAGE == 1
extern "C" {
    extern void ei_printf(const char *format, ...);
}
#else
extern void ei_printf(const char *format, ...);
#endif
#endif

#if defined __GNUC__
#define ALIGN(X) __attribute__((aligned(X)))
#elif defined _MSC_VER
#define ALIGN(X) __declspec(align(X))
#elif defined __TASKING__
#define ALIGN(X) __align(X)
#endif

using namespace tflite;
using namespace tflite::ops;
using namespace tflite::ops::micro;

namespace {

constexpr int kTensorArenaSize = 496;

#if defined(EI_CLASSIFIER_ALLOCATION_STATIC)
uint8_t tensor_arena[kTensorArenaSize] ALIGN(16);
#elif defined(EI_CLASSIFIER_ALLOCATION_STATIC_HIMAX)
#pragma Bss(".tensor_arena")
uint8_t tensor_arena[kTensorArenaSize] ALIGN(16);
#pragma Bss()
#elif defined(EI_CLASSIFIER_ALLOCATION_STATIC_HIMAX_GNU)
uint8_t tensor_arena[kTensorArenaSize] ALIGN(16) __attribute__((section(".tensor_arena")));
#else
#define EI_CLASSIFIER_ALLOCATION_HEAP 1
uint8_t* tensor_arena = NULL;
#endif

static uint8_t* tensor_boundary;
static uint8_t* current_location;

template <int SZ, class T> struct TfArray {
  int sz; T elem[SZ];
};
enum used_operators_e {
  OP_FULLY_CONNECTED, OP_SOFTMAX,  OP_LAST
};
struct TensorInfo_t { // subset of TfLiteTensor used for initialization from constant memory
  TfLiteAllocationType allocation_type;
  TfLiteType type;
  void* data;
  TfLiteIntArray* dims;
  size_t bytes;
  TfLiteQuantization quantization;
};
struct NodeInfo_t { // subset of TfLiteNode used for initialization from constant memory
  struct TfLiteIntArray* inputs;
  struct TfLiteIntArray* outputs;
  void* builtin_data;
  used_operators_e used_op_index;
};

TfLiteContext ctx{};
TfLiteTensor tflTensors[17];
TfLiteEvalTensor tflEvalTensors[17];
TfLiteRegistration registrations[OP_LAST];
TfLiteNode tflNodes[6];

const TfArray<2, int> tensor_dimension0 = { 2, { 1,156 } };
const TfArray<1, float> quant0_scale = { 1, { 0.0039215688593685627, } };
const TfArray<1, int> quant0_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant0 = { (TfLiteFloatArray*)&quant0_scale, (TfLiteIntArray*)&quant0_zero, 0 };
const ALIGN(16) int8_t tensor_data1[64*156] = { 
  -18, 12, -9, 18, -14, 17, 2, -6, -5, 19, 2, -10, -21, 3, 7, -12, -22, -9, -2, -12, -12, -16, 6, -4, 15, 12, -15, 8, -8, 16, 2, 0, 7, 14, 7, -13, 2, 10, -3, 8, 13, 4, 4, 12, 3, 5, 14, 15, 7, -7, -7, -20, -10, 10, 1, 0, -21, 8, 6, 5, -18, 10, 18, 19, -7, -12, 16, -1, -24, 18, 8, -13, 16, -17, -11, -12, 14, 7, 4, -8, -2, -20, -21, 13, -15, -21, 8, -15, -8, -11, 8, -15, 9, -22, -16, -18, -7, -4, -19, 6, 16, -19, 12, -16, -6, 15, 5, 1, 4, 10, -13, -8, -11, -12, 7, -19, 10, -4, -4, 2, 6, -23, -1, -24, 5, -14, -10, -13, 3, 15, -8, -14, 0, -20, -23, -16, 9, -8, 12, -19, -23, -2, -16, -11, -23, -5, 6, -5, -12, -4, 5, -9, -21, 3, -3, 3, 
  25, -4, 11, 13, 12, -5, 18, -3, 18, 15, -20, 14, -4, 7, 19, -1, 2, 16, 22, 15, -10, 8, -1, 10, -12, 13, 55, 1, 0, -37, -19, 1, 5, -14, -1, 8, -20, -16, -1, -10, 6, 4, -20, -3, 21, -17, -12, 9, -19, 7, 7, -13, 58, -2, -31, -23, 17, -13, 11, 19, -13, 5, -1, -2, -16, -7, -3, 4, -15, 8, -5, -2, -1, 12, 12, 10, -9, -19, -17, -10, -41, -34, -26, 0, -6, -8, -13, 20, -5, -6, -1, 0, 12, -4, 12, 7, 13, 10, 17, -6, 10, -3, -5, -14, 8, -55, -28, -23, -23, -9, 21, 1, 0, -18, -10, 4, 15, 11, -15, -9, -19, 23, 9, -4, -4, -5, 13, -5, 9, 6, 16, -6, -2, -30, -9, -10, -6, 14, 13, 16, -20, -5, -2, -6, 14, -9, -10, 17, 4, -10, -1, -8, -13, 18, -5, -2, 
  -7, -28, -10, 2, 32, 7, 10, 29, 13, 4, -22, -12, -14, -20, 19, 18, 1, 11, -3, 3, 13, 1, -12, 1, -13, 11, -15, -66, -42, 39, 77, 60, 38, 13, 15, 10, 15, 1, -18, 11, -25, -23, 4, -10, -10, -7, -13, -4, -6, -34, -2, -21, -40, -1, 12, -21, 20, -7, -7, -6, 12, 15, 0, 6, 13, 9, 14, -9, -7, -10, -9, -5, 11, 0, 17, -6, -4, 6, -22, -45, 32, 21, 33, 10, -1, -7, 9, 7, 21, 16, 9, -16, 14, -16, 0, -3, -5, -4, 5, 14, -21, -7, -18, 2, -33, -57, 17, 17, 32, 15, 10, -4, 8, 12, -2, 5, 5, 4, 1, 4, 30, 6, 0, 6, -4, 9, 15, -10, 29, 15, -7, -36, -16, -20, -11, 3, 23, 1, 5, -6, 4, -17, -33, -17, -2, -5, 18, -8, 11, 2, 4, -2, 9, 11, 16, -11, 
  -23, -7, 4, 16, -3, -7, -8, -2, -8, -21, 0, 5, 16, -14, -14, 11, 5, 19, -10, 4, -13, -16, -16, -12, 10, 11, -3, 14, 19, 9, -18, 11, 14, 18, 0, -9, 10, -17, 20, 11, -21, -21, 5, -5, -17, -12, -20, 7, -13, -18, -1, -10, -13, -8, 11, -14, 0, -19, -22, -11, 9, 19, 17, -5, 9, -8, -21, 9, 21, -17, -22, -23, 14, -17, 20, -17, -4, 14, 16, -7, -6, 12, -13, 12, 11, -9, 16, -6, 17, -8, -19, -16, 3, -2, 0, -3, 12, 7, 12, 0, -23, -8, 15, 17, -6, -4, 20, -9, 6, 1, -15, -16, 19, -18, 19, -9, -7, 11, -15, 12, 13, -7, -4, 4, 13, -15, 6, 7, -6, -5, -3, -14, 6, -10, -17, 17, 14, -12, 5, 3, 14, -11, -16, 2, -3, -4, -18, -3, -6, 2, -12, 1, -5, 13, 18, -1, 
  20, -61, -10, 9, 31, 11, 16, 24, 10, -6, -16, 0, -26, 13, -3, 4, -24, 7, -10, -14, 16, -6, -29, -12, 7, -11, 13, -72, -4, 28, -13, -10, -1, 9, 5, -17, -42, -22, -49, -54, -29, -44, -11, -45, -36, -70, -36, -39, -65, -46, -45, -41, 33, -30, 8, 22, 31, 17, 28, 19, 6, 5, 1, 18, 0, 17, 9, 17, 4, -20, -16, -21, -14, -19, 1, -5, -18, 15, -18, 2, -5, 0, 12, -5, 20, 1, 30, -14, -9, -1, -28, 3, 4, 1, -13, 1, -17, 2, 3, -11, -7, 8, 19, 0, -39, -8, 18, 26, 31, 4, 17, 20, -24, -17, -4, 10, -23, 4, 4, 17, -9, -5, -6, -11, -12, -2, -11, -20, 15, -20, -19, -22, 32, 39, 24, 45, 15, 34, 6, 24, 23, 28, 25, 7, -15, 18, -17, 17, -9, -12, -4, -19, 11, -26, -8, -21, 
  11, 11, 10, 1, -19, -12, -18, 8, -3, 1, 0, 18, 12, 13, -20, -4, 21, 14, -7, 2, 4, -12, 17, -19, -19, -20, 6, 13, -17, -17, 8, -16, -8, -6, -11, 12, 2, -17, 9, -21, -12, 13, -8, 10, 6, 14, 3, 4, -10, -2, 3, 6, -16, -9, -9, 16, 3, 12, -3, -23, -14, -13, 15, -5, -9, -12, -3, -8, 3, -10, -15, -8, -16, 7, -6, 20, 15, 1, -18, 15, 12, 12, 17, -22, 20, -16, -16, 15, -5, -22, 12, -14, 15, 8, 18, 11, 20, 2, 20, -7, 17, -1, -5, -11, -5, -1, -15, 19, -3, -13, 14, -23, -19, -12, -20, 8, 15, 2, -6, 19, -9, -11, 10, -16, -8, -5, -4, 4, 7, -10, 10, 4, 7, -14, -11, 6, -7, 16, -2, -15, 1, -9, -9, -21, -17, -14, -8, -12, 20, -6, -5, 1, 3, 9, 0, 18, 
  -16, -16, 11, -5, -5, -5, -2, -12, -18, -13, -14, 8, -16, -21, 2, 11, -10, -4, 9, -21, -9, -6, 15, -18, -5, 10, -18, -5, 4, -7, 14, 17, -22, 10, -15, 12, -9, -9, -6, -9, -6, -11, 10, -2, -7, 18, 18, 21, -2, -21, -20, 10, -20, 14, 13, -20, -8, 4, -7, -11, -17, 6, 12, -10, -10, -13, -7, 4, -19, -17, 22, -3, -10, -8, 6, -20, 10, -6, 17, -18, 11, 13, 20, 13, 12, 17, 18, 21, -14, 5, 6, -3, -18, 17, -13, 5, -2, -13, -3, 7, -17, -2, -8, -19, -5, -13, -18, 1, 1, -14, -21, -5, -18, -17, 0, 8, -17, 2, 1, 15, -6, 21, -19, -7, 6, -1, 19, 10, -4, -9, 2, -5, -14, 17, -7, -8, -20, 8, 14, 21, -11, -12, -3, 16, -18, 4, -2, -7, 7, -3, 14, -2, 13, -18, 8, -13, 
  -8, -5, -14, 18, 8, -1, 15, 4, 19, 3, -20, -18, -2, -10, -14, 4, -3, 3, -20, -12, -20, -14, 17, -10, 8, 14, 17, -12, 11, 12, -23, -18, 4, -14, -19, 13, -3, 16, -2, -17, -10, 15, -3, -3, 18, 5, 7, -21, -13, -18, 7, 19, 13, 3, 20, 18, 13, 5, 0, -10, 6, -12, 7, -1, 7, -4, 6, 6, 7, -14, 13, 8, 7, -2, -22, -23, 10, -12, -8, -2, 2, -13, 14, -11, -15, 19, 18, 17, -12, -19, -10, 5, -12, -22, -10, -14, -13, 16, 7, -3, -6, 8, -17, -5, 2, 0, 13, -7, -4, 20, 2, -22, 11, -20, 3, -5, -10, -21, 5, -13, -16, -5, 4, 4, 4, 17, 17, 17, 15, 13, 20, 14, -5, 19, 0, -9, -21, 6, 9, -2, -7, 20, -10, -12, 12, -20, -13, 5, -21, -8, -14, -17, 7, -1, -19, 16, 
  7, -12, -2, 20, -4, 4, -5, -10, -20, 0, -9, -12, -17, 14, -1, -15, -8, -5, -3, 5, 18, 18, -8, -4, 5, -10, -3, 1, 17, -8, -5, -17, -19, 8, 12, -16, 19, 4, 11, 18, 13, -17, 21, 3, 19, 10, 20, 9, 19, -22, -5, 6, -3, -1, 9, -16, -16, 10, -16, 9, -4, 8, -16, 16, -16, -18, 18, -17, -21, 10, -13, 11, -10, 4, 20, 21, -12, -10, -18, 1, 6, 6, -4, -4, -20, -5, -12, -3, 1, -15, -6, 5, -21, 6, 16, 16, 21, -19, 7, -4, -3, -20, -1, 14, -21, -19, -14, 8, -7, 10, -18, -21, -10, 5, 9, -19, -10, -17, 18, 19, 5, 7, -10, 5, 2, 8, -16, 17, -18, 12, 0, 6, 2, -21, 20, 13, 11, -17, 11, 8, 17, -6, -1, 10, -18, -10, -4, -4, -21, 0, -11, 2, -12, 3, -8, 8, 
  -14, 54, 19, 30, -4, 7, 19, 19, 10, 7, -4, 9, -15, 0, 16, -9, -14, 21, -7, 4, 21, 18, 19, 14, 22, 5, -42, 30, 20, 40, 49, 55, 51, 3, 2, 0, -18, 13, -9, -3, -13, -17, 2, -20, -19, -24, -5, -4, -14, -39, -6, -8, -47, 29, 25, 28, -12, 12, 4, -1, -11, -19, -22, -20, 5, 19, -5, 6, 5, 15, 18, 3, 2, 21, -17, 1, 17, -9, -17, 0, -28, -8, -19, -13, -22, -11, -13, 9, 13, 15, 9, 5, -1, 7, 20, 8, -12, -5, 20, -3, -9, -14, -1, 16, 7, 50, 13, 19, -3, -13, -11, 3, 15, -14, 5, -26, -21, -26, 4, 15, 8, 1, 11, 11, -10, 0, -6, -16, 3, -1, -28, -13, -31, -18, -6, -24, -20, -7, -3, -28, -3, -11, 1, -7, -27, -2, -25, -11, -12, 13, 1, -10, -7, -21, 2, -9, 
  -77, -33, -3, 1, -24, -19, -9, -9, -5, -15, -22, -29, 0, -6, 1, -9, -1, 2, 4, -8, -12, 20, 11, -6, 9, 15, -43, 9, 13, 29, 37, -2, -8, -16, -5, -18, -11, 13, 16, 10, -5, -4, -14, 5, -11, -1, -1, 10, -14, 5, 11, 23, 15, -8, 16, 10, -2, 2, -14, -12, -25, -16, 6, 16, 10, 12, 5, 3, -4, 15, -7, 0, -2, 4, 2, 5, 3, 4, -1, -9, 35, 25, 14, 15, 3, -14, -9, 18, 16, 8, 15, -4, 3, 14, 22, -9, 17, -6, -2, 9, -20, -5, -16, -5, -24, 37, 47, 22, 12, 11, 21, 3, 20, -9, 7, -10, 2, 13, -10, -2, 0, -9, 11, 9, -15, 18, -7, -12, 22, -5, 6, 23, 24, -9, 15, 35, 28, 15, 25, 15, 21, -18, 16, 8, 12, -1, 3, 12, -4, -12, 11, 5, 7, -1, -14, 10, 
  70, 14, -22, -19, -6, 11, 13, 20, 5, 18, -20, -4, 12, -5, 14, -4, 12, -3, 13, 15, 2, -17, 11, 2, 0, -12, 21, -43, -42, -17, 7, 10, 33, 10, -5, -17, -9, 5, 13, 13, -15, 1, 17, -19, -2, -11, 1, 14, 20, 0, -8, 6, -42, -25, -43, -26, 14, 6, 20, -14, 19, 15, -21, 19, -16, 16, -12, 15, 19, 16, 9, 18, -11, 8, -7, 2, -6, 10, 1, -44, -41, 23, 24, -24, 0, 17, -7, 20, 8, 8, 13, -9, 0, -12, 20, -18, -9, -6, 13, 5, -14, 8, 7, -2, -10, -26, -12, -9, 26, 14, 21, -9, -9, -9, -15, 17, -1, -1, -11, -1, 22, 0, -13, 12, 22, 17, -5, -10, 5, 15, -52, -59, -28, -18, -6, -18, -17, 2, 6, -4, -4, -2, 16, -9, -10, -9, 28, 10, 8, 26, 2, -1, -4, -5, -17, 10, 
  8, 4, -16, 7, -8, 11, -3, -16, 19, 0, -7, 6, -2, -14, 1, -3, 17, 5, 9, 16, -5, 7, -13, 5, 12, 2, -21, 7, -15, -5, -21, 15, -10, -17, 9, 4, -13, -4, -18, -15, -13, 13, -7, 21, -12, 10, 12, 10, 13, 11, 11, -18, -18, 21, 10, -21, -21, -17, 4, 9, 19, 5, -10, 10, -5, -18, -18, -4, -4, 19, 19, 22, -4, 3, -14, -20, -8, -4, 12, 6, -14, -16, -1, -19, 0, 14, -3, -10, 18, 1, 9, 3, 15, -5, -20, -7, -12, -20, -2, -10, -18, -15, 8, -4, -12, -19, -1, -17, -6, 14, -20, 3, -8, -21, 4, -2, -18, 21, -4, -2, 4, -4, -10, 11, 13, -3, 6, -11, 20, 3, 13, 12, -9, 1, -2, 15, 10, -4, 20, 2, 11, -12, 0, 1, 13, 13, 6, 6, 11, -17, 2, 3, -11, -9, 9, -6, 
  7, -11, 14, 3, -1, -14, 10, -12, 0, 5, -9, -28, -15, 13, -19, -3, 12, -5, 11, -5, 0, -7, 14, -9, 10, 5, -75, -3, -3, 36, 70, 74, 75, 45, 48, 31, 25, -4, -3, -2, 17, -5, 9, -18, -2, -12, -22, -21, -23, 2, -4, -24, -48, -1, -23, 26, -13, 15, -4, 15, 24, -7, 20, 14, 17, 24, 14, -13, 11, -21, 3, -6, -5, -12, 10, -3, 8, -17, -11, -20, -26, 2, -28, -20, 5, -5, -19, -5, -13, 12, -6, 17, 10, 19, 4, -14, 15, -20, -14, 1, 11, 16, 2, -11, 22, 36, -25, 16, 32, 41, 5, 38, 14, 2, -9, 2, -8, -9, -5, -20, -27, -23, -1, 11, 0, -16, 20, 14, 4, -15, 16, -7, -15, 14, 6, 4, 2, -10, 11, 7, 22, 19, -12, 10, -13, 8, 14, 19, 21, 5, -6, 12, 18, 8, -16, 2, 
  -13, 19, -5, -18, 18, -12, -4, 4, -11, -18, 15, 14, -14, -19, 14, 15, -18, 11, 2, 4, -20, 19, 9, -8, -19, 10, -20, 11, -8, -1, -21, 5, -5, 10, 11, 5, 11, -18, 1, 11, -12, -19, -2, 6, -11, 4, 12, -21, 6, -14, 19, 9, -15, -14, 4, -19, 8, -5, -3, -16, -6, -9, -4, 13, -10, -17, 20, -20, -3, -4, -6, 0, -16, -10, 13, 22, -16, -19, -4, 17, 10, -7, 0, -3, 7, 0, -12, -1, -15, 6, -12, -16, 17, -2, -12, -22, 1, -20, 5, -5, 19, 13, -18, -10, -1, 8, -20, 21, -13, 21, 16, 16, 5, 18, 7, -21, 20, 18, 3, 21, -18, 12, 7, 17, -21, 4, 18, -9, -11, -11, 17, 17, -11, -3, -3, -14, 13, 14, 12, -13, -19, 21, -8, -16, -17, 18, 18, -4, -11, -13, 9, -19, -5, 16, 8, -19, 
  -13, 10, 3, 14, -15, -2, -3, -2, 15, 13, -19, 3, 1, 14, -2, -8, 15, -13, -7, -3, -1, 15, -8, 8, 8, 4, 4, -11, -20, -14, -20, 19, 9, -2, -4, -22, -22, 1, -20, 6, -15, 19, -8, 17, -21, -7, 22, 9, -8, 12, -21, 3, 1, 7, -11, 15, -22, 17, -7, -3, 22, -7, -12, 18, 5, -21, -20, -21, 21, -22, -17, -15, 8, -20, 15, 4, 16, 9, 13, -7, -19, 15, 1, 0, -7, -8, -1, -4, 5, 19, 8, 17, 22, 13, -12, 15, -20, -18, -10, -12, -8, -16, -9, 14, 8, -3, -11, 6, 17, -13, -10, 1, -7, -1, -3, 5, -19, -19, 16, -2, 15, 11, 20, 21, 11, -15, -7, 18, -3, 15, -6, 1, -13, 2, -3, -21, -20, 14, 9, 19, -14, 22, 18, -20, -14, -16, -1, -8, 21, -9, -21, -18, -10, 21, -19, -10, 
  -17, -4, -9, -22, 17, 14, 18, 4, -19, -10, -3, -12, -12, -16, -10, 20, -19, -5, 12, -13, -6, -1, -2, -16, 6, 10, -2, -11, 16, 4, 17, -22, 20, 3, -3, -13, 11, 16, 15, 14, -14, -7, -16, 8, -22, 19, 2, 3, -11, 19, 13, -15, 11, -13, -16, -1, 11, -6, -5, -11, -12, -9, 13, 6, -22, 15, 1, -12, 20, 3, -18, 20, -21, 15, -1, 8, 2, 0, -8, 2, -21, 9, -18, -12, -10, 0, 10, -18, 4, 13, -4, -21, 13, -1, -17, -17, -4, 1, 6, 2, 8, 16, -3, 21, -3, -11, 12, 10, -1, 2, -17, 8, -7, -16, -10, -11, -20, -16, 11, -19, -5, -4, -21, -14, -2, 8, 13, -8, 6, -8, 4, -8, 0, -11, 19, 14, 16, -17, 7, -7, 17, -12, -17, -16, 11, 2, 7, -3, 12, 1, 19, -18, -5, 11, 2, -8, 
  -10, 4, 7, 0, -10, 0, -2, -8, -8, -10, 3, -8, -12, 11, 1, 2, -20, 13, 11, 0, 18, 12, -10, 8, 5, 14, -10, 5, -19, -5, 13, -3, 12, -19, 20, 17, -19, -20, -12, 6, -1, -16, -20, 17, -18, 7, 5, 15, -18, 13, 6, -11, 7, -20, -21, 4, -3, 15, 14, 3, -12, -15, -22, -18, 19, -8, 5, -18, -10, -22, 6, -1, -6, 11, -21, 0, 14, -9, -19, -2, 12, 14, -18, -9, 10, -21, 18, 8, 17, 16, -20, 3, -17, -13, 8, 15, 4, -17, -13, 5, 18, -19, 11, -3, 4, -9, 13, -3, 6, -8, 19, -21, 1, 4, 7, -6, 21, 12, 15, 6, 5, -4, 11, 4, 15, -10, 14, -17, -7, -12, 14, -3, 14, 11, -2, 15, -14, -9, 19, -1, -10, -21, 2, -2, 1, -3, 20, -6, -2, -15, -12, -21, 3, 5, -4, -17, 
  -22, 54, 26, 22, 9, 1, 18, -5, -10, 2, 12, -3, -9, 14, -4, 5, 2, 7, -25, 15, 14, 14, 14, 10, -1, -12, 32, 36, -15, -5, 27, 31, 59, 54, 29, 12, 1, -21, -4, -38, -36, -25, -14, -18, -22, -4, -26, -18, -17, -15, 6, -1, -49, -2, 6, 32, 9, -3, 10, 9, -9, -4, 0, 23, -8, -11, 9, 8, -18, 3, 2, -9, 9, -9, -14, 21, -9, -17, 1, -41, -68, -34, -23, -12, -2, -14, 12, 1, 4, 21, 19, 13, 0, 16, -20, -14, 10, 8, -21, 10, -15, 1, 14, -18, 4, 24, -27, -3, 3, 30, 36, 38, 34, 24, 21, 21, -15, 11, -17, -14, 6, 12, -15, -1, 9, 1, -5, -22, -17, -13, 18, 11, -22, -22, 15, 9, -9, -18, 15, -11, -12, -9, -14, -23, 5, -30, -18, -15, -15, 14, -11, -16, -14, -9, 4, -2, 
  5, -16, -32, -16, -6, 7, -23, -8, -5, 1, 23, 9, 4, -10, 16, -3, -7, 5, -19, -10, -8, -18, 15, -4, -2, -4, 41, -46, -34, -19, 3, -8, 7, -17, 0, 21, -4, 6, 11, 2, 21, 18, -7, 10, -5, 5, 16, -11, -1, -2, -12, 15, 73, -12, -39, -26, 10, 2, 4, 14, -7, 12, -14, -11, 9, -8, 18, 2, 7, -8, 21, 14, 2, 7, -3, 14, 15, -5, -7, -42, -10, 20, -12, 17, 22, 7, 16, 21, -1, 15, 18, 15, 9, -13, 3, -13, -1, 16, -8, 4, 4, -11, 12, -8, 31, -44, -41, 4, 18, 21, 2, 0, 4, -3, -15, -8, 5, 9, -11, 15, 0, 13, -7, 11, -9, 18, -4, 6, 7, -17, -8, -63, -57, -31, 1, -26, -15, -9, -7, -20, 6, 21, 14, 8, 0, -2, -3, -6, 5, -8, 19, 19, 22, 18, 17, 20, 
  -2, -9, 4, 20, -6, 7, 8, -7, -16, 20, 10, 8, -4, 7, 6, 8, 2, -1, 13, -8, -4, -7, -13, -16, 5, -1, 17, -15, 5, 26, 15, 18, 16, 26, 21, 7, 12, 7, -10, 3, -12, -5, -14, -2, -2, 3, -1, 3, -1, -18, -24, -7, 35, -35, -41, 3, 9, 26, 25, 24, 36, 26, 35, 28, 15, 3, -13, 12, 14, 3, -12, 5, -15, -10, 11, 6, -12, -2, -15, -42, -70, -64, -57, -21, 15, -16, -17, 0, 7, -11, 0, 4, -7, -20, 7, -14, -15, -20, -21, -25, 2, 2, -24, 1, -12, -28, -12, -8, 9, 51, 5, 48, 37, 28, 2, 16, 12, -25, -7, 0, -30, -32, -17, -1, -5, -13, -16, 3, 0, -17, -7, -2, 27, -7, 5, -4, 22, 5, 37, 38, 13, 20, -12, 7, 0, -16, -11, 0, 0, -5, 3, 7, -7, -2, -29, -11, 
  37, -21, -27, 4, -5, -9, -2, 19, 18, 22, 5, 8, 22, 14, 16, -15, -8, -21, -18, -10, -14, -2, -14, 12, -15, -13, 61, -66, -18, -37, -62, -66, -75, -33, -42, -22, -16, -3, -20, -44, -28, -15, 2, -15, -27, -20, -24, -47, -45, -21, -48, -23, -9, 17, 7, 11, 12, 29, 25, -8, 20, 17, 3, 22, -13, 15, -6, 9, -12, -6, 21, -3, 6, 16, -13, -19, 13, -20, 18, 4, 31, 4, 5, 1, 22, -5, -12, -1, -16, -15, -34, -31, 0, 7, 9, 13, -1, 2, 3, 19, 1, 17, 1, -13, -5, -34, 32, -12, -14, 11, -21, -12, -17, -11, 10, -5, -17, -25, -8, -4, 9, 10, -7, -10, -10, -3, 13, 28, 24, -8, -26, -2, 23, 0, 12, -8, 23, -17, -4, 0, 5, 31, 10, 25, -10, -2, 7, 12, -7, 19, -17, -3, 0, 7, -4, 8, 
  -47, 36, 10, -15, 3, 1, 13, -8, -12, 2, 8, -2, -1, 1, 10, -28, 12, -18, 12, -6, -17, -6, 1, -5, -12, 3, 8, 10, 7, -6, 11, 21, 28, -4, -2, -20, -29, -29, -16, -18, -13, -10, 2, 9, -11, -21, 22, -8, 2, 5, -1, 12, -88, -24, 27, 18, 25, -11, 5, -9, -18, -13, 16, 5, -5, 4, -17, -5, 5, 6, -8, 7, 13, 22, 3, 24, 8, 15, -7, 13, -6, 26, 9, -23, -4, -20, 6, 13, 5, -3, -16, 18, 12, -10, 3, -14, 27, 13, 13, -14, 13, -17, 6, -7, 21, 41, 15, 2, -3, -2, 19, -4, 21, 7, -14, -5, 16, 16, 5, -18, -11, 1, 13, 12, -16, 5, -13, 16, 24, -3, -26, 57, 6, 10, 32, 13, -14, 18, -8, 17, -19, 9, 2, 4, 0, -15, 15, 10, -1, 22, 21, 7, 16, 11, 24, -16, 
  -6, -18, 15, -13, -6, -5, -7, 5, 13, -21, -18, -21, -9, 17, 3, 13, -10, -11, -3, -16, 6, 14, -11, -9, 6, -12, -13, 21, -18, -19, -9, -20, -16, -9, 13, -2, 1, -13, 16, 20, -11, -19, 18, 15, 3, 17, 8, -22, -14, 14, 13, -19, -17, 19, -16, 10, -13, -19, 11, -9, 8, 8, -7, 11, -18, 9, -18, -7, 0, 6, 1, 15, -21, 5, -7, -6, 10, 16, -13, 11, 12, 9, -2, -14, 3, 18, 8, 2, 8, 6, 13, 1, 0, 10, -1, -4, 19, -19, 19, -6, -15, 14, -4, -8, -5, -9, -14, 1, -9, 17, 18, -12, 6, -2, 13, -21, 14, 9, 12, 0, -5, -4, 6, -10, -10, 8, 15, 19, -9, 6, 22, 8, 14, -17, -3, -14, 2, -22, 12, 7, 15, -11, -17, 6, 7, -8, -16, -21, -1, -21, 19, 6, -14, -2, 14, 0, 
  37, -15, -32, -9, 19, 8, 11, 3, 4, -7, 15, 0, 18, -12, -10, 4, 0, 13, -4, -14, -5, -3, -28, -4, -8, 8, 45, -67, -37, 3, 15, 10, -13, -16, 5, 28, 21, -18, -1, 19, 10, 7, 0, -2, -14, 3, -8, -12, -26, -1, 22, -8, 23, 2, 8, -23, 20, 10, -7, 28, 2, -2, 4, 10, 24, 1, 14, 6, -4, 11, -10, -8, 16, -1, 11, -14, 8, -4, -37, -24, 9, 32, 43, 20, 27, 30, -4, 17, -7, -2, -16, -7, -23, 11, -2, -7, 16, -12, -19, -12, 10, -21, -18, 12, -36, -36, 8, 31, 10, 10, -24, -5, -21, 6, -27, 4, -21, -6, -20, -14, -4, -17, -8, 7, 5, 3, -1, -9, -4, 11, -30, -42, 4, -7, -17, 17, 0, -9, -2, 6, 3, 13, 9, -18, -2, 6, 9, 6, 3, -4, -24, 9, 8, -20, -19, -19, 
  -12, -19, -4, 2, -12, 8, 14, -9, -15, 17, 20, -2, -20, -16, 6, -2, -13, 13, 9, -12, 0, 16, -17, 10, 12, 5, -21, -12, 2, -22, 20, 4, -21, -5, -10, -3, 18, -13, 9, -21, 20, 19, -11, 21, -1, 19, 1, -7, -12, 8, 9, -18, -16, 3, -13, -5, -19, -11, 6, 15, 17, -6, -22, 18, -11, 6, -17, 12, -22, 19, 13, -20, 0, -17, -21, 16, -14, -22, 8, 12, 1, -20, -3, 21, 14, 6, -11, -12, 13, -1, -2, 10, -6, -19, -9, 0, -10, -19, -11, 2, -18, -15, -4, -1, 9, 6, -3, -4, 9, 21, 11, 5, 9, -13, -14, 3, 1, -10, 8, -15, -21, 11, -22, 3, 2, 4, -5, -14, 16, -14, 13, -15, -12, 2, 2, 9, 15, -4, 3, -20, -17, 14, 21, 14, 19, -3, -13, -2, 5, 16, 1, -22, 5, -10, 10, -18, 
  58, 28, -9, -45, 1, 7, -11, 7, 17, -4, 6, 3, -2, 3, 15, 9, -17, -7, -19, -20, -22, -28, -7, 11, -23, 3, 4, 0, 0, -13, -87, -91, -86, -68, -47, -17, -29, -30, -16, -18, -9, 16, 13, 3, 25, 27, -13, -32, -32, -32, -23, -18, -7, 26, -21, 11, 17, 10, 17, 1, -20, 2, -17, -17, 23, 21, 12, -14, -1, 23, -8, -1, -4, 19, 10, 9, 15, -16, -18, 9, 22, 19, 17, 23, 25, -2, 6, -9, -2, -12, 12, 0, -10, 19, 16, 23, 12, 26, 5, 20, 5, 14, 3, 11, -30, 46, 20, 21, -10, -31, -25, -21, -2, -7, 2, 20, 10, 11, -3, -10, 19, 12, -5, -10, 21, -1, -4, 15, 26, 4, -28, 2, 10, -5, -1, 0, 7, -10, -22, 11, -13, 15, 0, 6, 14, -19, 4, 4, -12, 10, 14, -13, -17, -19, -7, -12, 
  21, 2, -11, -6, 1, -18, 10, -18, -1, -1, -12, 17, 16, 20, 15, 0, 17, 11, 3, -5, 6, 7, -4, -19, -11, 18, 5, 10, -7, 12, -17, -20, -10, 2, 9, -10, -11, -15, 13, -14, 15, 12, -6, -11, 2, 6, 5, -6, -20, -11, 15, 18, -21, -9, 18, 2, 4, 17, -18, -1, 7, 0, 17, -10, 13, 7, -21, -14, 13, -21, 9, -11, 0, 11, -16, 17, -8, 7, 17, 15, 12, -18, -14, -5, 20, 20, 14, 4, -2, 1, 12, -6, -22, 11, -19, -7, 1, 16, 19, -2, -2, -18, -2, -10, -17, -10, 14, 2, -16, -16, 5, 19, -18, -21, 6, 15, -3, -8, -13, -7, -16, 16, -21, -9, -15, -11, -7, -1, -22, 1, -12, -12, 2, -1, -7, -22, 1, 6, -5, -5, 10, 12, 7, 17, 18, -19, 18, 2, -22, -10, 6, 15, -22, -20, -7, 8, 
  9, -21, -37, -19, -26, -5, -14, 15, 6, 1, 10, -6, 10, 7, 22, 21, -6, 5, 1, -5, 23, 15, -19, 14, -9, -5, -55, -28, 18, 44, -4, 7, -21, -29, -1, -8, 13, 20, 24, 23, 22, 6, -9, 22, 12, 13, 16, 2, 13, -10, -15, -19, 9, 12, 18, 24, 1, 21, 23, -7, -11, -3, 18, 15, 19, 24, 16, 21, -5, 24, 2, 1, 0, 3, -2, -9, -2, 3, -33, 33, 34, 47, 35, 7, -10, -19, 11, 3, 10, 5, -6, -22, -3, 6, 5, -3, 4, 2, 1, 5, -21, -18, -1, -15, -27, 37, 60, 4, -21, -5, -32, -35, -30, -2, -18, -7, -21, -20, -17, 5, -10, 16, -24, -10, 0, 5, 23, -8, -9, 6, -61, -41, 19, -7, 20, 22, 9, 6, -8, -21, 14, -12, -1, -4, -4, -16, -16, 6, -2, -12, -5, -21, -18, 6, 8, 16, 
  -7, 1, 15, -8, 17, 21, -19, -17, 10, 9, -16, 18, 2, -2, -22, 12, -6, -18, -20, 14, 14, -26, 11, -2, 3, -19, 2, -19, 6, -12, -13, -17, -14, 2, 0, -19, -12, 8, -14, 9, -20, 17, 11, 4, -17, 4, 17, 11, -5, -13, -3, -23, -26, -19, 22, -9, 13, -9, -19, -9, 8, -5, 12, -6, -14, 12, 10, -21, -11, 19, 8, -18, 5, -14, 6, 8, 18, 1, 3, 4, 34, 9, 21, 25, -5, 3, 6, 15, -2, -8, -1, 7, -22, 12, -25, -6, -16, -17, 3, -24, -25, -13, -8, -12, -3, -4, 12, -8, 15, 20, -6, 19, 15, 13, -3, 1, -5, -14, -14, -5, 10, -22, -12, 3, -22, -1, -5, -25, -22, -16, 15, -10, 10, 28, 26, -2, -11, 17, 7, 3, 4, 15, 17, -18, 18, -20, -7, 1, -10, -3, -22, 6, 15, -7, -11, -17, 
  -42, -38, -27, 13, 22, 20, 12, 25, -9, 5, -5, 4, 11, 2, 20, -14, 12, -18, 13, 2, -7, -16, -12, 11, 14, 12, -56, -16, 28, 15, 36, 16, 36, 33, 39, 26, 26, 26, 28, 32, -10, 2, 15, 15, -20, -1, 7, -16, -4, -23, -12, 24, 35, -5, 25, -7, 17, -3, 25, -12, 18, 10, 14, 12, -13, 25, -14, -2, 15, 11, 8, -11, 7, -15, -17, -7, -4, -4, 1, 13, 8, -17, -4, 22, -5, 29, 7, 13, 23, 10, -18, -14, -2, 14, -10, -5, -7, -11, -13, 0, -8, -3, 3, 13, -45, -17, 19, 3, -19, 6, 19, 21, -10, 8, -11, 14, 10, -2, -3, -19, 3, 17, -21, -1, -2, -17, -20, -23, 2, 14, 5, -38, 16, 18, -10, 20, 0, 1, 14, 18, 5, 8, 13, -25, -5, 11, 2, -7, -9, 12, -22, -29, -14, -27, -14, -19, 
  12, -5, -19, -19, -12, 13, 5, -19, -7, -19, -8, -6, -5, 12, 9, 3, 5, 1, -15, 6, 14, -20, -12, -16, 17, -7, -6, 18, -14, -16, 11, -10, 11, -14, 18, -13, -11, 10, -12, -10, 16, -10, -8, 14, -14, 17, 20, -15, -5, -15, -9, 3, -17, 18, 13, 6, 10, -21, -7, -3, 16, -10, -3, -4, 17, 7, -4, -17, -10, 18, -4, 5, 11, 3, -14, -9, 10, -6, -2, -20, -1, 1, 0, -16, -17, 20, 11, 3, 6, -21, 0, -3, 9, 19, 11, 9, 15, -11, -5, -1, -11, 11, -8, 16, -21, -9, 12, -2, -8, -13, 20, -1, 19, 8, -9, -11, -14, -21, 17, -2, -21, 19, 17, 20, -13, 4, 2, 0, 6, 0, -2, 16, 13, -14, 10, 7, -18, 5, -12, -8, 20, -4, -4, -5, -16, -17, -9, -13, 11, -21, 18, 16, -21, 21, 8, -15, 
  86, 34, -24, -18, -22, -4, -19, -13, 10, -3, 13, -1, 16, -10, 11, 3, -3, 7, 7, -7, 8, 1, -5, 7, 15, 2, 55, -6, -12, -6, 0, 17, 1, -2, -5, -10, -19, 8, -10, -22, -6, -12, -12, 4, 0, -2, 7, 0, -9, 5, 17, -8, -62, 23, -18, 25, -4, 1, 16, -2, 10, -5, -4, -1, 3, 9, -12, -10, 19, -2, 2, -13, 8, 4, -12, 14, 15, 3, 14, 3, -3, -13, 0, 4, 5, -14, -18, -15, 6, 5, -8, 8, 0, 2, 14, 11, -1, 24, 15, 14, -12, 0, -4, -17, 6, 14, -30, -27, -16, 15, 2, 1, 4, 4, -10, -12, -15, -19, -9, -3, -10, 11, 19, -7, 7, 14, 1, 5, 6, 15, -28, 1, -29, -17, -26, -1, 1, -15, -8, 3, 0, -19, -12, -5, -5, 17, -5, -9, -2, -16, 4, 9, 5, -10, 5, 0, 
  5, 19, -18, -14, 1, -12, -20, 7, -9, -17, 10, 19, -11, 11, 14, 20, -10, -20, 2, 20, 13, -3, -6, -20, 8, -12, 15, -8, 6, -12, 13, 6, -13, -16, -16, 2, 4, 10, 15, 6, -9, 21, 10, 5, -19, 0, -4, -13, -18, 3, -11, 13, 8, 16, 0, -9, -5, -6, -4, -13, -20, -12, -6, -14, -22, -22, 13, 14, 20, 20, -6, 17, -16, 2, -8, -19, -1, -11, 19, -6, 1, -13, 9, 18, -20, 15, -8, 11, -13, 8, 13, -5, -20, 21, 20, -18, -17, 3, -21, -18, 0, -9, -8, -6, -11, -4, -5, 12, -1, 6, 17, 5, 6, -15, 2, 16, -17, -2, -21, -16, 20, 16, -11, -19, 2, -12, -16, 2, -7, -4, 8, -5, 8, 11, 17, 21, 18, 15, 2, 14, -10, 21, 15, -23, -18, -17, -7, -10, 19, -5, -13, 10, 14, -10, 11, 1, 
  -22, 13, -14, -17, -3, -10, 13, -10, 3, 20, 14, 9, 17, -12, 4, 2, -16, 13, 3, 12, 1, -16, -8, -12, 11, -20, -22, -16, -4, 4, -6, -14, 12, -20, -2, 4, 17, 21, -2, -9, 15, -9, -9, 2, -7, 1, -21, -14, 7, -18, -12, -10, 5, 0, 10, 10, -13, -21, -17, 20, 2, -13, 18, -7, 16, 6, -13, 2, -13, -4, -17, -9, -1, -1, -16, -1, -2, 15, -9, -20, -9, -19, -6, 2, -11, 18, 6, 3, 0, -14, -3, 6, 14, 11, -13, 0, 7, 11, 7, -3, 17, 11, 18, 17, -19, 2, 21, -5, -15, -4, -2, 14, 11, -1, 12, 2, 3, 12, -5, 21, -17, 7, 19, -19, -20, -7, -14, 3, 3, -3, 20, -10, 2, 15, -15, -18, -13, 13, -17, -13, 4, 1, -7, -3, 18, 15, -1, -16, 21, 12, 19, 18, -9, -11, -14, -1, 
  21, 4, 3, -12, -13, 15, -7, -3, 6, -19, 12, 17, 1, -15, -22, 14, -7, 11, -13, 13, 10, 3, 0, 10, -12, 20, -19, 18, -19, -19, -9, -5, 3, 14, 1, 16, -9, 8, -13, 0, -12, -6, 17, 8, 16, 5, -20, 6, 0, 5, 7, -18, 18, -11, 12, -2, 2, -13, -2, 2, 11, 13, -14, -8, 9, -1, 19, -18, 3, -16, -8, -17, -10, 6, 17, 1, 14, -20, -2, -21, 16, 20, -16, -17, 6, 7, -6, 0, 17, -1, -15, -21, 7, 5, -3, -9, -7, 3, 8, 1, 16, -5, -15, 19, 15, 7, 9, 9, -19, 16, 18, -22, 1, 4, 6, -18, -1, 5, 5, -21, -20, -5, -12, 9, -4, 13, -10, 1, -21, -22, -16, 10, -10, 20, -21, -14, 12, 18, 2, -17, -14, -12, -21, -3, -14, 11, -12, 18, 0, -6, 0, 12, 8, -8, 4, -17, 
  10, -3, 3, 10, 26, 23, -5, 7, 18, 26, 32, 27, 17, 21, 15, 3, 15, 11, 1, -1, -11, -19, -10, 11, -12, 19, 45, -79, -45, -73, -35, -57, -57, -57, -43, -44, -21, -23, -35, -29, -56, -36, -44, -31, -1, -30, 3, -30, -7, -17, 11, -54, 21, -10, -2, 12, -18, -18, -14, -16, 0, 0, -10, -1, 5, 6, -7, 18, 2, -16, 10, 24, 24, 3, 5, -7, 20, -7, -6, -3, 37, 46, 31, 11, 22, 2, -9, -19, -4, -22, -2, 19, 0, 19, -17, -6, 1, -15, -12, -18, 6, 4, -20, -5, 6, -31, -20, -9, 3, 11, -6, -24, -3, -8, -20, 1, 0, 18, -5, 2, -9, -6, -21, -7, 2, 17, 18, -22, -12, 1, -7, -29, -15, -21, -21, 14, 9, -6, 5, -23, -7, -10, -16, -14, 18, 10, 19, -18, -3, 15, -14, -4, 1, 6, 23, -5, 
  -27, 56, 13, 0, 4, -1, -4, -3, -5, -14, 11, 13, 8, 3, -14, -24, -12, 1, 3, 18, -11, -7, -10, -4, -14, -14, -24, 14, 26, 13, -13, 22, 16, -8, 14, 3, -19, -14, -16, -10, -15, -3, -14, 6, -6, 13, 13, -10, -3, 6, -5, 1, -91, 27, 44, 7, 21, 8, -4, -20, 17, -5, -18, -15, -16, -7, 3, -4, -14, 5, 12, 9, 5, 10, 6, -12, 10, 16, -6, 27, 9, 31, 4, 20, -18, 3, -3, 18, -5, -9, 10, 4, 5, 7, 10, 14, -7, -2, -1, -3, 5, 2, 2, 10, 13, 29, 36, 8, -12, -12, -13, -4, -6, 8, 7, 16, 8, -6, -23, -17, -13, 3, -20, -13, -17, 0, -13, -15, -14, 4, 14, 59, 22, 23, 22, 3, 17, -5, -3, 21, 3, 17, 15, -3, -4, 9, 10, -4, -2, -5, -7, -1, 18, 21, -16, 0, 
  -6, 3, -12, 17, 1, -5, -5, 4, 11, 2, 1, -5, 15, 17, 12, 0, -17, -14, 18, -7, 7, 18, -5, -12, -7, 10, 20, 18, -6, 11, 20, 3, -4, 19, -23, 18, -16, 12, 5, -23, -17, 7, -15, -10, -7, -17, 3, -2, 9, -20, 17, 14, -19, -20, 0, -3, -1, -19, -20, -18, -5, 15, -8, -7, -20, 16, 16, -20, 5, 15, -21, 14, -12, -12, -16, 5, -4, 1, -3, 12, 15, 0, 6, 4, 13, -23, 0, 14, 15, 12, -10, 0, 7, -2, -15, -6, -20, -10, -14, 6, -20, -6, 0, -12, 9, -11, 6, -5, -16, 16, -1, -13, -5, -11, 12, -21, -21, 4, -13, -22, 1, -23, 18, -15, -22, -2, -22, -14, -4, -22, 8, 5, -20, -19, -2, -18, -4, 0, 3, 0, 9, 15, 0, -5, 4, -5, -14, 1, 4, -5, -22, -19, 0, -16, 1, 18, 
  15, 15, 19, 23, 8, -40, -31, -16, 4, -28, 2, -5, 4, -21, -13, -16, 24, 7, 15, -8, 22, 9, 1, 10, -16, 16, -53, 15, 59, 36, 33, -11, -12, -5, 20, 23, 11, 7, 19, 8, 26, 8, 19, -2, -17, -4, 1, 7, 3, 8, -8, 0, -7, 22, 4, -6, 1, 4, -13, 2, -14, 16, -5, 16, -14, 9, -17, 23, 0, -12, 10, 20, 21, 6, 20, 22, -14, 19, -9, 23, -21, -7, -8, -18, -13, 5, 1, 10, -3, 7, -7, 26, 19, -11, 18, 21, 12, 6, 10, 21, 21, -6, -8, -12, -14, 80, 38, -1, -24, -7, -1, 9, -12, -17, -9, 2, 11, 2, -19, -15, -14, -7, 18, 3, -9, 22, 20, -13, 17, -21, -10, 22, 22, 22, -21, -28, -10, -31, -14, 1, -6, 4, -3, -2, 8, -27, -7, 8, -20, 2, -23, -29, -29, -13, -33, -1, 
  -61, 44, 25, -1, -4, 25, 10, 8, 24, 13, 23, 18, 23, 14, 13, 7, -13, -23, 2, -10, 8, -20, 7, 11, 8, 8, -3, 31, 34, -6, 21, 3, -15, -2, 9, -7, 22, -1, -8, -13, 12, 8, 9, -3, -16, 0, -9, 4, -7, -7, -25, -5, -40, 1, 46, 23, 11, 12, 5, -19, -6, -3, 8, -8, -8, 1, -4, 12, 8, 5, 2, -11, 13, 1, 15, 4, 2, 16, -19, 7, 54, 62, 41, 9, -17, -2, -2, -8, 9, -4, 12, -15, 17, -19, 11, -5, 4, -14, -9, -13, 18, 13, -7, -5, 13, -17, 25, -12, -17, -39, -36, -31, -41, -39, -31, -34, -18, 2, 0, 19, 0, -12, 13, 13, 7, -11, 8, 5, -11, -7, 15, -8, 6, 7, -2, -17, -29, -4, 0, -34, -34, -25, -15, -16, -10, -14, -1, 13, -12, -17, -3, 10, -12, 17, -6, -4, 
  -7, 32, 19, 24, 2, 16, -16, 24, 12, 16, -15, 4, -6, -15, 10, 5, -7, -19, -10, 15, 4, -12, -9, -16, 11, -5, 14, 23, 30, 26, -10, 3, -5, 3, 12, 17, -8, 2, -1, -27, -9, -22, -26, -20, 11, -25, -8, 3, 2, -11, 7, 15, -72, 17, 42, 3, 13, -1, 8, -19, -24, 5, -27, -20, -7, -28, -24, -15, 4, -13, -2, 7, -13, 6, 7, 10, -7, -9, 26, 44, 68, 65, 21, 3, 4, -11, 4, 21, -17, -7, 14, -10, 3, -14, -13, -1, -13, -18, 12, 20, 21, -4, 7, 10, 1, -20, 27, 11, 4, 0, -23, -15, -9, 7, 9, 9, 29, 13, 16, 21, -11, 1, 7, -3, 18, 10, 9, 13, 16, 5, 3, 31, 27, -4, 7, -9, -14, -8, -8, -5, -21, -15, -1, 7, -1, -22, 7, 1, -9, -19, -10, -10, -9, -11, 0, 11, 
  -76, -3, 12, 9, -14, 14, 4, -8, -6, 7, -11, 10, -10, -22, -15, 20, -9, -3, 14, 17, -8, -4, -9, 6, 13, -16, -54, 34, 50, 11, 21, -3, -32, -25, -11, 12, -26, 12, 9, -18, 6, -8, -7, -10, 16, -20, 3, -15, -12, -23, 9, -10, 21, 30, 17, 5, -23, -17, -17, -14, 9, 8, -1, 3, -3, -2, 5, -2, 5, 0, -13, -15, 5, 1, 21, 18, 15, 8, -31, 10, 34, 28, 17, -11, 11, 12, 1, 3, 2, 25, 26, 31, -4, 7, -10, -2, 19, -13, 16, -15, 0, 17, 10, 12, 12, 38, 12, 24, 6, -9, -24, -16, 17, 18, -7, 10, -3, -2, 18, 5, -2, 7, -19, 10, 11, -9, 9, 11, 9, 9, 38, 23, 18, 2, 14, 6, 14, -6, 19, -15, 13, 12, -1, 5, 2, -11, 6, 5, -2, -25, -16, 12, -6, -13, 2, 4, 
  -81, -7, 29, 28, 22, 24, -4, 18, 6, -24, -3, -3, -14, -7, -5, 16, 15, 8, -22, -2, -7, -15, 0, 14, -7, -15, -18, 14, 31, 18, 21, 4, 5, -2, -16, 1, 12, 19, 25, -8, -13, -1, -5, -10, 17, 11, 13, -16, -24, 11, -24, -20, 36, 10, 29, 21, -5, 7, -1, -23, -8, -11, -13, 5, -13, -14, -1, -9, 15, -20, 0, -7, 10, 11, -20, 4, -15, -9, -37, 23, 10, 24, 12, -24, -3, -2, 8, -20, -16, -8, -11, 6, 16, -3, -22, 3, 16, 13, 3, 15, -12, -1, -9, -5, -6, -11, -1, 18, -25, -4, 11, -6, -11, -19, 12, -7, -17, -3, 5, -1, -10, 8, 5, -8, 2, 9, 12, -14, -29, -14, 0, 43, 50, 23, 44, 18, 36, 35, 7, 19, 5, -19, -24, -2, 2, 17, 2, -10, 6, 4, -17, 5, -1, 11, -12, 27, 
  -81, 22, 7, -13, 14, -1, -2, -18, -4, -25, -10, -3, -7, -23, 12, 7, -18, 9, -13, -8, 7, -21, 8, -19, 15, 15, -51, 29, 36, -1, 36, 19, -10, 0, -17, -24, -31, -7, 20, -9, -14, 11, 11, 23, 15, -2, -10, 2, -11, 11, -10, 8, -4, 17, 5, 12, 8, -14, -6, 13, -17, -24, 9, -15, -24, 6, 10, 9, 11, 15, 2, 18, 24, 19, 20, -12, -4, 3, 2, 6, -1, -4, 17, -22, 15, -21, 17, 7, -14, -8, 2, 7, 19, -4, -1, -6, -8, 30, -4, 27, 23, -15, 5, -4, 18, 52, 45, 22, 9, -6, -6, -2, -25, -11, 1, 10, 4, 10, 16, 2, 11, 1, 2, -18, 2, 14, -16, 3, 19, -2, -22, 37, 6, 10, 2, 34, 22, 22, 9, 9, -3, -4, 9, -24, 4, 0, 9, -13, -6, -10, -4, 17, 5, 2, -2, 1, 
  -20, -9, 4, 10, -7, 18, -11, -19, 21, 19, -6, 14, -9, 13, -4, -7, 16, -1, -23, 7, 8, 3, -6, 10, -26, 2, -3, -24, -14, 17, -15, -1, -7, 4, -3, 4, -7, -19, 18, 11, -12, -26, -16, -11, -1, -13, -13, -25, -28, -22, -8, -29, -3, 17, 6, -20, -15, 2, -9, 15, 20, -8, -1, 18, 4, -14, 12, -5, 15, -9, -9, 0, -2, -3, 9, 8, -7, 19, -23, -16, -3, 12, 5, -8, -7, 5, -14, 17, -3, 15, -24, -6, -3, 8, 9, 9, -21, 5, -16, -25, -21, -17, 8, -17, -5, -16, 12, -11, -1, -4, 5, 13, 15, 13, -8, -3, -17, -2, -3, 13, -3, -2, -4, 13, -16, 11, -27, -10, -5, -13, 14, 2, 26, 18, -14, -10, 14, -18, 8, -19, 19, -3, 5, 12, 5, -20, 6, 6, -27, -5, -6, -2, 9, 3, -30, -6, 
  26, -8, 9, -23, -13, 5, -1, 8, -6, 17, -5, 1, -5, -5, -11, 6, 1, -7, 8, 6, 4, -12, 13, -12, 0, -6, 72, -16, -1, -20, -7, -27, -26, -16, 1, -19, 3, -13, -22, -26, -23, -27, -21, 14, -6, -8, 13, -23, 15, 9, -2, 11, 40, -8, 0, -22, -7, 1, 10, -14, 13, 14, 12, 1, -3, -16, -14, 8, -7, 3, -17, -15, 16, 16, 4, -12, 8, 16, 15, -3, -13, -1, -14, 3, -21, -5, 10, -6, 13, -17, 6, -3, 11, 8, 3, 0, 20, -16, 1, 11, -3, -6, 22, -7, 13, -11, -16, -14, -2, -7, -19, 12, -21, 14, 11, -13, 13, 18, -2, -10, 5, -13, 18, -6, 24, -4, 18, -15, 17, 3, 5, -4, -10, -13, 17, -14, -18, 9, -21, 1, 4, 7, -5, 12, -17, 10, 10, 4, 9, 26, 15, 4, 14, 18, -1, 18, 
  4, 52, 9, 13, -7, 9, -5, -1, 34, 33, 20, 27, 32, 15, -13, 19, 20, -2, -9, 8, 2, 5, 1, 4, 7, -7, 16, -64, -80, -127, -120, -61, -34, -13, -8, -6, 15, -10, -6, -33, -29, -38, -58, -34, -69, -64, -51, -45, -81, -57, -61, -19, -31, 4, 1, -16, -12, 7, 2, -12, 27, 12, -4, 22, 27, 4, 9, 16, 20, 4, -19, -12, 15, 13, -6, 11, -1, 18, -3, -2, 10, -6, 9, 8, 2, 6, 8, -8, -8, -14, 1, 1, 19, -3, 2, -23, -10, -23, 8, -16, -11, -24, -12, -9, 7, -3, -8, -2, 8, 6, -5, 13, 10, 14, 19, 11, -9, 8, 3, -24, -18, 13, 10, -10, -23, 2, 7, -3, -15, 13, 7, 2, -8, -23, -35, -8, -22, -12, -10, 22, 6, -17, -9, -13, -5, 19, 7, -4, 13, 7, -16, -5, 14, -4, -3, 0, 
  21, -16, 8, 1, 6, 17, -11, 10, -12, -17, 3, -10, -4, -13, 15, -17, -16, -17, 4, -10, -20, -16, 15, 20, 23, 9, 31, 0, -16, 10, 25, 44, 38, 23, 39, 28, 10, 4, 16, -15, -5, -5, -18, 3, 10, -1, 10, -17, -3, -1, 9, 10, 44, -23, 7, -12, -27, -9, -14, 1, 16, 32, 22, 25, 10, -11, -10, -20, -6, -22, -16, 1, 8, 14, -2, 2, -10, 12, -21, -23, -38, -56, -16, -29, -3, 7, 12, 20, -7, -2, 21, 4, -8, -18, -4, 18, -21, 3, -9, 2, -14, 4, -5, 1, 19, -37, -44, -11, 10, 2, 31, 28, 21, 0, 20, 5, -1, 5, -5, 3, 11, 14, -12, -17, -8, 14, -9, -4, 8, -18, 18, -14, -26, 3, -9, 6, 13, 7, 13, 16, 1, 7, 2, 23, 14, -1, -7, -6, -4, -7, 18, 7, -21, 14, -5, -18, 
  2, -5, -12, -5, 4, 18, -8, 19, -11, 21, -3, -13, -17, -18, 13, -6, -5, -2, 18, 1, 20, 19, -21, -16, 10, -8, 11, -10, -18, 1, -11, -1, 2, -7, 17, -13, -22, -3, 8, -12, 15, 14, -12, 8, -13, -7, -5, 7, -17, -18, -2, 12, -9, 14, 18, 1, -4, -13, 14, -17, 10, -20, 0, 6, -15, -16, -7, -19, 14, 15, 5, -6, 11, 2, -14, -3, -1, -15, -3, 14, 13, 9, 20, 19, 1, -2, 10, 1, 1, 1, 11, 1, -19, 22, 11, 0, 4, -19, -14, -17, 0, 1, 15, -11, -15, 9, -11, 19, 4, -9, 19, -13, -18, -21, -17, 11, 21, -21, -18, 21, -16, 5, 10, 8, 11, -17, -18, -21, -4, -12, -21, 3, -2, 5, -16, -12, 18, 20, -15, -9, 3, -6, 9, 9, 5, -13, 17, 8, -12, 18, 3, 19, 4, 11, -5, -16, 
  -21, -7, -6, -16, 5, -7, 9, -14, -3, -6, 19, 2, -8, -5, 19, 20, 10, 3, 8, -7, 18, -20, -1, -15, 5, -12, 13, -10, -21, 4, 17, -11, -12, -3, 10, -18, 3, 6, -18, -7, -10, 2, -12, -2, -19, -4, 4, 3, 5, 21, -1, -18, 0, 16, 9, 11, 1, -18, 14, 13, 19, 4, -4, 11, -7, 16, -10, -12, -5, -12, 18, -21, 14, -1, 7, -10, -9, 18, -22, 5, 3, -15, 6, -20, 16, -5, 20, 12, -13, 4, 17, -2, 10, -9, 3, 10, -3, -9, -11, -13, -16, -13, 3, -7, 14, -18, -9, 15, -16, -11, -15, 8, 11, -22, -9, 15, -17, -8, -9, 8, -11, -11, -21, -14, -17, 10, 16, 21, 5, -15, 18, 5, -2, 4, 3, -8, -15, 5, -12, -19, -16, -15, -11, 16, 21, 11, -7, -9, 16, -8, 5, -1, 5, 9, 1, 2, 
  -50, 30, 52, 28, 4, 16, -6, 19, 18, 18, 21, 7, -17, -19, 14, -8, 5, 10, -24, 9, 12, -9, 5, -20, 17, 7, -36, 21, 19, -21, -12, -20, 8, 4, 5, 7, 17, 0, -4, -13, 12, -14, -22, -2, -14, -9, -19, -22, -2, -3, 7, -14, 24, -15, 25, -4, -10, -14, -2, -4, -18, 13, 5, 3, 0, -21, -5, -16, -11, -13, -21, -8, -5, 16, -18, -17, -22, -20, -9, 27, 30, -1, -13, -23, -15, 1, -18, -5, 28, 13, 11, -2, -1, 8, 0, -19, -5, -12, -3, 22, -17, 6, 14, -19, 21, -5, 11, -13, 5, 9, -11, 25, 23, 2, 8, 17, 13, -11, -2, -6, 19, 0, -18, 8, 17, -13, 16, 7, 4, 13, 62, 70, 35, 9, -4, 21, 7, 9, -17, 16, 9, 8, 4, -7, -29, 1, -1, -1, -27, 12, -11, 1, -6, -2, -18, 15, 
  11, 4, 20, -4, -23, -37, -35, -28, 4, 1, -27, -15, 8, -17, 7, -4, 6, -5, -12, 20, 17, 17, 2, 10, 3, 7, 42, 50, 5, -12, -50, -6, -27, -18, -6, -9, -4, 11, 15, -5, -6, 7, 19, 3, -9, -15, 4, 9, -3, -9, 16, -10, 80, -1, -20, 7, -18, -24, 10, -14, 18, 6, -14, -16, 0, 15, -23, -7, -5, -17, -18, -25, 5, -15, 13, -17, 22, 11, -12, -18, -74, -43, -6, -5, 1, 5, 12, 22, 1, 8, 12, -1, 5, -6, 23, 4, 21, 6, 13, 23, 8, 8, 5, 6, 29, 1, -24, -30, -10, -10, -5, 10, 14, 30, -9, 16, 13, -3, -2, 0, 16, -4, 15, -10, 13, -1, -11, 5, 6, 16, 14, 39, 27, -6, 1, 19, 4, 2, 19, 13, 6, -9, -11, -9, -3, 3, 25, 10, 16, 9, -9, -14, 8, -17, -18, -13, 
  -42, -8, 20, 31, -10, 3, -5, -14, 6, -2, 8, -6, -2, -15, -7, -20, 14, 13, -10, -18, 5, 2, -13, 3, -17, 10, -38, -4, -2, 10, 35, 35, 24, -8, -6, -2, -20, -10, -5, -11, -21, 12, 6, -11, 2, -24, 1, 11, -2, 6, -27, -17, -3, 19, 36, 13, -1, 9, 5, -16, -7, -5, -16, 17, -7, 8, -6, -17, 10, 18, 19, -12, -2, 9, 2, 21, 4, 15, 8, -3, 19, -8, 2, -1, 12, 7, 14, -24, -4, -6, -2, 19, -12, -22, -11, -18, 18, -16, 12, 11, 9, -14, 18, -11, -8, 33, -4, -5, -13, 1, 5, 0, 9, -7, -27, -9, 14, -10, 2, 12, 10, -10, 0, -28, 2, 13, -23, 7, -18, -7, 4, 35, 8, -4, -9, 13, -4, -5, -23, 15, 8, -24, -15, -25, 10, 0, -25, -18, -10, -26, -3, 2, 5, 10, 13, 5, 
  11, 8, -6, -21, -16, -7, -11, 24, 5, -1, 16, -5, -2, -16, 7, -24, -12, 1, 6, -22, 8, 8, 19, -2, 5, -6, -36, 26, 28, -5, -1, -18, 7, -22, -1, -8, 16, 14, -15, -11, -19, -5, -10, 13, -13, -4, 1, -3, -5, 6, -19, -16, -51, -15, 27, 17, -10, 2, -10, 15, 12, 12, -16, -14, 5, 11, 4, 3, -17, 4, 12, -23, 8, -10, 15, -5, 7, -3, 13, 28, 46, 19, -4, 23, -7, -4, 15, 28, -10, 16, -15, -8, 11, -7, -3, 21, 16, 23, 12, 9, -16, 1, -4, -15, -29, 48, 42, 9, 14, 12, -13, -22, -11, -22, 4, -23, 6, 6, -23, -8, 3, -8, 2, 18, -28, -4, -19, -12, -3, -3, -16, 57, 49, 13, 45, 30, -10, 14, -9, -15, 16, 12, 9, 17, 0, 12, -14, 8, -11, -6, 7, -14, -23, 3, 11, 11, 
  -9, -3, 16, -18, 7, 11, 10, 17, 5, 6, 12, -13, -6, -17, -3, -5, -9, -2, -6, 0, -14, -15, -16, 1, -7, 11, 19, -9, -23, -19, -3, 4, 4, 10, -4, 18, 19, -23, -17, -23, -12, 12, 2, -16, 1, -6, 14, -8, 2, 13, -21, -19, 8, 8, -20, 10, 15, 11, 9, 15, 13, -1, -14, -17, -10, -6, 9, -7, 19, 3, -3, 18, -9, -23, -2, -3, -24, 17, 2, 10, -23, -7, 15, -22, -23, 17, -21, 10, 5, -13, -17, -3, -21, 15, 3, -14, 18, 15, -23, -16, -13, 0, 3, -23, 18, -13, 1, -13, -4, -4, -20, -18, 13, -4, -16, 1, -8, 9, -11, -1, 17, -7, -23, 7, 9, -7, 2, 6, -4, -4, -5, -16, -15, 18, -15, -17, -20, -3, -8, -3, 0, -21, 19, -2, -19, -16, -9, 12, -3, -9, 4, 1, 14, -2, -22, 16, 
  62, 24, 6, -14, -22, -22, 10, -11, 16, -7, -3, 3, -17, -13, -15, 11, 5, -13, -2, 3, -6, 22, 5, 12, 9, 17, 26, 16, -50, 9, 13, 12, 10, 4, 2, -2, -18, -18, 0, -31, 10, 6, -32, 1, 9, -9, 16, -4, -13, 20, 23, 6, -80, -15, -4, 4, 25, -18, 10, 4, 8, 2, 12, -6, -14, -18, 5, 1, -5, -20, -12, -12, -9, 4, 7, 18, 15, -1, -5, 8, -20, -2, -10, 6, -16, -9, 5, 0, 17, -10, -16, 7, -6, -11, 2, 8, 9, -3, -2, 1, 8, 17, 16, 20, 20, 19, -26, 3, -10, -8, 14, -7, 3, -20, -11, -10, 21, -1, 20, 9, 8, 6, -3, 4, 3, 0, 13, 16, 14, -12, -14, -21, -8, -12, -3, -18, 9, -12, -23, -28, -14, 3, -6, 9, -4, 14, -1, 16, 24, 10, -6, 24, 5, 28, 9, 11, 
  -21, 14, -18, -10, 5, -11, -17, 10, 19, 22, -19, 15, 6, 6, -1, -9, 20, -8, -12, -3, -8, -22, -20, 14, 22, -9, -17, -6, 12, -2, 12, -13, -12, -17, -18, 11, -17, -5, 8, 1, -10, -6, 6, 7, -15, 9, 7, 16, -17, -3, 8, 16, -17, 2, 15, -18, -15, 17, -12, -10, -4, 18, -20, 7, 20, -4, -13, -13, -1, -11, -12, 21, -2, -5, -11, 20, -8, -4, 2, 19, -18, 20, -13, 17, -14, -6, -5, -14, -13, -18, 16, -13, -11, -18, -20, -2, -9, -16, 21, 11, -20, -12, -15, 12, -5, -13, -4, -5, -21, 12, -21, 10, -10, -21, 14, 0, -5, -13, -9, 6, 19, -7, 4, -4, 13, 2, 20, -21, 1, 8, 12, 20, -2, -10, -21, 2, -14, 0, -19, -11, 20, 4, -18, -5, 5, 15, -16, 2, 6, 17, -17, -13, 8, -2, 7, 13, 
  26, -77, -22, 2, -2, -7, -3, 3, 10, -1, 6, -5, 0, 12, -16, 9, 13, 11, -13, -5, -13, 12, 4, -22, -7, -17, -42, -59, 3, 21, 21, 24, -12, 23, 19, 17, -2, -1, 15, -10, 30, 24, -2, 14, 8, 1, 3, -12, -24, 4, -24, -24, 35, -13, -35, 4, 25, 30, 29, -9, 16, -8, 26, 5, 27, 4, 26, 27, 13, 27, 9, -8, 11, 17, 13, 14, -1, -2, -33, -13, -4, 15, 28, 11, 1, 8, 33, 12, 12, 1, 11, 15, 4, 1, -12, -22, 6, 0, 11, 5, 2, -13, -10, -15, -57, -7, 6, 9, 11, 29, 20, 8, 4, -4, -9, -11, 4, -8, -9, -2, -10, -6, 7, -17, -6, -10, -14, -6, -9, 8, -34, -51, -23, 8, 22, 3, 0, 5, -4, 17, -10, -11, -10, -1, 4, 5, 14, 12, 7, -19, -23, 0, -9, -18, -29, -4, 
  75, 12, -8, 6, -14, 3, 9, -22, -18, -19, -7, -24, -23, -24, 12, 13, -18, 21, -2, -3, 17, 10, 23, -11, 18, -5, 45, 34, -2, 4, 11, -10, 24, 27, 17, 8, 0, 3, 2, -16, -29, -30, -14, 6, -3, -11, 8, 4, 4, -11, 15, 4, -64, 1, -1, -7, -1, -8, -8, -1, -4, 5, 26, 1, 12, -16, -15, -7, 7, 3, -14, 16, 6, -12, 8, -1, 5, -2, 31, -9, -52, -33, -43, 2, 1, 12, -1, 0, -13, -14, 12, 7, -24, 4, -12, -29, 14, -9, -4, -7, 4, 8, -3, 19, 21, 25, -17, -23, 22, 34, 18, 5, 4, 21, 28, 6, 5, -10, -16, -2, -2, -17, -6, -15, -13, -18, -6, 2, 9, 11, -12, 29, 40, -2, 25, 16, -2, 20, -21, -14, -21, -21, 19, -11, 8, -1, 20, -9, -3, -9, 10, 17, -14, 6, -1, -5, 
  57, -39, -42, -18, 11, -9, -9, 17, 14, -4, -18, -17, -17, -11, 10, 13, 13, 5, -15, 19, 5, -15, 19, -5, 8, 14, -26, -12, 16, 23, 2, -12, -3, 7, -6, 19, -10, -21, -7, -7, -13, 8, -7, -16, -28, -42, -50, -29, -18, -19, -18, 5, -60, 26, -5, 36, 39, 16, 25, 8, 17, 1, 9, -6, 17, -5, 5, -5, -5, -5, -12, -7, 13, -29, -27, -5, -24, -15, 14, 12, 25, 17, 18, 5, 22, -7, 18, -9, -15, -17, -23, -29, -9, -19, -20, -5, -15, -17, 2, 12, -13, 8, -1, -3, -36, 39, 17, 33, 9, 11, 6, 33, 24, -16, -18, -13, -2, 1, 3, -28, 1, 1, 6, 7, 4, -16, 15, -2, -2, 7, -19, 19, 29, 47, 27, 4, 9, 11, 23, 17, 16, 16, -1, 16, 21, 11, -11, -2, 0, -25, -21, -22, 13, -4, -11, -6, 
  -7, -24, -34, -14, -7, 18, 5, -10, 24, 13, 24, 33, -6, -9, 20, 24, -5, -8, -1, 16, -15, -23, -6, 1, -24, -23, 18, -48, -56, -35, -38, -17, -16, -33, 2, -19, 10, -9, -12, 2, -9, 38, 39, 34, 28, 18, 8, 18, 18, 14, 24, -2, -31, -18, -33, -23, -14, -11, 9, 3, -13, 16, -3, 13, 20, 22, 23, -8, 13, 2, 0, 6, -7, 20, -5, 20, 1, 7, -15, -13, 8, 7, 1, -11, -4, 19, -5, -2, 7, -14, 6, 26, 11, 3, 13, 25, 30, 15, -2, 11, 26, 19, 15, 24, -7, -17, -8, -18, 6, -3, 7, -1, -16, -21, -19, -30, -34, -18, 14, 15, -13, -18, 19, -6, 12, 2, -8, 12, 4, -22, -40, -25, -30, -14, 1, 16, 24, 13, 20, -6, -1, -3, -3, -2, 10, 31, 32, 7, 28, 17, 22, 19, -7, 5, -1, 15, 
  4, 12, 21, 4, 15, -24, 11, 6, -12, 2, -4, -6, -2, -12, 9, -2, -22, 15, -23, -16, 2, -20, -7, 19, -17, 4, -69, 23, 37, 66, 38, 61, 51, 53, 52, 25, 24, 0, 1, -2, 9, 7, 3, 4, 1, -16, -15, -14, -19, -5, -23, -12, -18, -8, -10, 5, 26, -5, -10, -6, 0, 25, 14, 30, 21, -9, 5, 17, -11, -8, 14, -14, -7, 18, -24, -12, 1, -6, 0, -11, -25, -37, -23, -7, -15, -22, 17, 5, 9, -1, 28, -1, 13, -3, -10, 7, -8, 11, -11, -5, 12, -20, -15, -13, -11, 10, 18, 13, -2, 2, 27, 47, 22, 29, -6, 18, -6, 16, 2, 9, -1, 14, -1, -21, -7, 17, -10, 5, 13, 9, 5, 7, 35, 9, 6, -15, 11, -3, -15, -7, -10, 9, 10, 3, -11, 10, -21, -17, -7, 16, 4, -5, -10, -19, 13, 2, 
  -4, 6, 26, -5, 6, 9, -22, -20, -2, -19, 14, 7, -8, -10, 15, -14, 10, 9, 11, -16, -18, -18, 23, -5, 22, 5, 9, 0, 9, 30, 5, -12, 16, 10, -17, 15, -13, 20, 6, 0, -9, 20, 17, -13, -19, 1, -18, 19, 20, 28, 18, 16, -20, -21, -44, -32, -17, -42, -50, -25, -50, -12, -54, -30, -36, -34, -50, -50, -22, -33, -32, -27, -6, -4, -31, -25, -23, -18, -8, 35, -6, 18, 11, 24, 17, 16, 18, 5, 14, 34, 27, 7, -7, 27, 14, 38, 3, 20, 23, 7, 17, 11, 6, 10, -14, -4, 7, 15, -7, -3, 27, 16, 3, 21, 19, 27, 29, 21, 0, 14, 23, 22, 17, 19, 10, 8, 23, 1, 0, -8, -18, 22, 5, -3, -4, 21, 12, 4, 10, -2, -7, 10, 13, -6, 7, -3, -9, 25, -1, 9, -4, 20, -1, -18, -16, 17, 
};
const TfArray<2, int> tensor_dimension1 = { 2, { 64,156 } };
const TfArray<1, float> quant1_scale = { 1, { 0.0075462157838046551, } };
const TfArray<1, int> quant1_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant1 = { (TfLiteFloatArray*)&quant1_scale, (TfLiteIntArray*)&quant1_zero, 0 };
const ALIGN(16) int32_t tensor_data2[64] = { -556, 11940, -2365, -453, 6278, 48, 0, -207, 0, -8511, -10663, 7118, 0, -11067, 0, 0, -216, -161, -821, 8188, 534, 9910, -2891, 0, 8796, 0, 6306, -141, -5814, -2463, -9716, 0, 8869, -41, -116, -57, 9779, -7041, -403, -12538, -1479, -3933, -8429, -5155, -9254, -2029, 13757, 5307, 1979, 0, 0, -5055, 6465, -8148, -6110, -633, 5847, 0, -4423, 2092, -4042, 6025, -12026, 119, };
const TfArray<1, int> tensor_dimension2 = { 1, { 64 } };
const TfArray<1, float> quant2_scale = { 1, { 2.9593004001071677e-05, } };
const TfArray<1, int> quant2_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant2 = { (TfLiteFloatArray*)&quant2_scale, (TfLiteIntArray*)&quant2_zero, 0 };
const ALIGN(16) int8_t tensor_data3[64*64] = { 
  -24, 2, 67, -10, 32, 8, 31, -1, 2, -14, -45, 76, 5, 7, 12, 0, -31, -16, -34, 46, -7, 7, 9, -27, 50, 19, -13, -27, 3, 31, 0, 8, 41, -3, 1, -31, 44, -67, -31, -27, 12, 26, -55, -37, -50, -18, 49, -13, -5, -31, -35, -40, -32, 12, -33, 15, 27, -2, 25, 11, 2, 8, 13, 12, 
  -24, 25, -39, -21, 20, 20, 32, 18, -18, 18, -38, 27, 32, -42, -14, 6, -18, 24, 7, 22, 63, 13, 28, -28, -33, 14, 31, 17, -8, -20, -18, 11, -15, 12, -12, 12, 13, -10, 21, 9, -12, -58, -25, 19, 19, -6, -12, 35, 8, 31, -2, -36, 57, 8, -3, -35, 49, 22, -55, 33, -41, 30, 22, 2, 
  -24, -2, 44, 9, -21, 8, 21, 17, 22, 11, 29, -15, 3, 28, 14, 12, 8, -25, -23, 12, -11, -40, 21, 17, 0, 0, -3, 4, 42, 6, 45, 5, -24, 25, -12, -28, -2, 53, -25, -24, 64, 75, 60, 8, -9, 18, 8, -89, -24, -11, 25, 31, -61, 12, 39, 13, 10, 5, 6, 26, 28, -28, 30, -9, 
  -23, -9, -17, 24, 1, -15, 0, 28, 5, -34, -41, -8, -35, -49, -33, -19, -21, -2, 9, -7, -11, 56, -1, 24, -5, -27, 15, -12, -42, 30, -51, -25, -12, -29, 27, 35, 43, 42, 28, -27, 43, -18, -29, -9, -40, -16, 40, 63, -11, 26, 2, 16, -8, -12, -11, -2, 19, -15, -75, 19, -12, 33, -31, -33, 
  5, 54, -69, -16, -49, -18, -10, -23, -24, 7, 1, -112, 0, -30, 9, -28, -8, 31, -54, 11, 15, -2, -55, -5, -40, -28, -44, -4, 9, -22, 60, 29, -50, -31, 1, -21, -45, -48, -3, 12, -5, -16, 82, 27, -26, -35, 16, 8, 20, 10, -10, 42, 86, -16, -21, 19, -68, 22, 17, 30, -42, -33, 18, 43, 
  21, 30, -9, 15, -14, 22, -28, -33, -4, -43, -1, 12, -22, -41, -2, 25, -29, 8, -47, 22, -24, 4, 29, 6, 11, 14, 47, 19, 5, -36, -32, 6, 5, 23, -22, -34, -20, 0, 18, 39, -62, -50, -21, -18, 24, 18, 14, 20, -36, 31, -11, -9, 44, -17, -5, -25, 38, -19, 30, 4, 19, 62, -59, 5, 
  27, -1, 37, 1, -44, 22, 7, -34, 33, -6, -38, 27, -3, 17, 17, -36, 10, 22, -46, 13, -54, 17, 4, 22, 26, 5, 7, 11, 16, -18, 6, -18, 51, 24, 24, -30, -19, 42, 20, -14, 61, 45, -26, -33, -12, -31, 21, -29, 5, 5, -18, -9, -77, -19, 15, 15, 24, 17, 20, -19, -7, 41, -26, 13, 
  -13, -21, 22, 31, -54, 19, 15, 27, -12, 44, -4, 17, 22, 38, -28, -26, 19, -1, 63, 26, -29, -15, 18, 11, -9, 18, -50, -29, -20, 1, 11, 8, -7, 3, -24, 21, 23, 21, 22, 17, 80, 34, 36, -29, 20, 27, 15, 34, 11, 31, 26, 20, -55, -9, -13, 19, -15, 17, -53, -12, -41, -24, 24, 12, 
  -23, -6, -16, 24, -75, -7, -13, 20, 27, 22, -44, -13, 1, -36, -15, -25, -10, -25, 34, -17, 24, -61, 42, -24, 8, -19, -68, 22, -37, 22, -33, 13, 63, 2, 31, -17, -24, 25, 29, -13, 56, 49, -29, 24, -43, -7, 7, -13, 44, 26, -20, 26, 49, -13, -22, -14, 22, 35, -86, 15, -29, 3, -28, -16, 
  -11, 32, -48, 14, -67, 6, -26, 27, 4, -7, -23, 2, 1, -23, -25, 28, 29, 5, 27, 15, 12, -3, 34, -23, -14, 32, 16, 18, -56, -5, -45, -19, 49, -35, 35, -16, -18, 28, -31, 5, 29, -40, -23, -24, 31, -20, 33, 50, 19, 22, 21, 19, 65, 30, 4, -2, 13, 35, -91, 12, -72, 3, 0, -99, 
  -4, 22, 32, 31, 16, -18, 18, -23, 10, -20, -76, 41, -6, 4, 15, -32, 11, -25, -17, -9, 55, 34, -31, 21, 25, 13, 31, -17, 34, -28, -5, -30, 65, -33, -11, -16, -24, -27, -35, 27, -69, -29, -17, -58, -65, -2, 6, 55, 23, -30, -29, 1, 10, 4, 16, 32, 15, 19, 29, 1, 36, -23, 17, 7, 
  3, 6, 2, -19, 34, 28, -11, 4, -20, 2, -17, 29, -34, 22, -24, -13, -28, 23, 55, 3, 41, 26, -19, 8, 40, -20, 34, -33, -22, 11, -13, 17, 60, 32, -16, 26, 25, -41, 29, -24, -47, 36, -78, 6, -55, -14, 28, 55, -5, 19, 1, -31, 32, -26, -26, 33, 30, -18, -25, 51, 17, -27, 24, -25, 
  25, 16, -17, 22, 20, -5, -28, 14, 19, 5, 31, -3, -13, 13, -7, -20, -14, -17, 65, -29, 14, -35, -12, -8, -24, 4, -17, 34, 9, 31, -4, 33, -4, -1, -23, 14, -35, 41, 20, 16, 32, -31, 26, 19, 33, -25, -2, -72, 8, 30, 11, -14, 16, -8, 5, 8, 0, -12, -16, 7, -45, 25, 52, -14, 
  -9, 13, -25, 22, -63, -5, 21, 6, -16, -13, 33, -1, 12, -32, 12, 29, -30, 21, -60, 51, -41, 2, -44, 18, 18, -10, -17, -11, 37, 2, -34, 24, 25, -9, 3, -2, -48, -87, 26, 15, -56, -7, 26, -15, -19, -9, 62, -21, 26, -32, -16, -35, 74, 4, -3, 11, 40, -35, 22, 18, -87, 4, -17, 74, 
  4, -21, -7, 30, 6, 1, -29, 9, -30, -20, 40, -27, 18, 15, 21, 17, 19, 26, -20, -45, 27, 24, 20, -3, 22, 27, 24, -20, -8, 20, 12, 10, -40, 16, 5, -35, -6, 56, 34, 16, -47, 6, 43, 42, 10, 8, 14, -48, 6, -17, 28, 1, -12, 17, 36, -20, -22, -31, 29, 9, 54, -4, 44, 8, 
  28, -16, 0, 29, 2, -11, -1, -19, 1, -25, 2, -17, -26, 16, 30, 12, 21, -8, 47, 20, -53, -39, 36, -20, -47, -23, -30, 12, -25, -33, -4, 30, 12, -23, -25, -29, -41, 6, 23, -28, -43, 33, 44, -7, -34, 0, -3, -2, 22, 26, -33, 22, 31, 10, 27, -27, 45, 3, -34, 26, -41, -4, 19, 35, 
  -11, -29, -5, -32, -21, 30, -10, -15, 3, -16, 14, 22, 0, -27, 3, -20, -1, 13, 24, -7, -22, 22, -28, -19, -19, -9, -6, -18, 26, 28, 6, 26, -35, 6, 28, 1, -22, 15, -14, -18, 3, 20, 22, -16, 3, -10, -1, 2, -9, 25, -14, -25, -6, -8, -13, -11, -25, -15, -15, -29, -10, 1, -15, -29, 
  31, -3, 10, 13, 56, -12, -33, 12, 20, -7, -6, 40, -4, 15, 22, -31, 11, -17, 15, 99, 46, -7, 5, -35, 30, -7, 27, 23, -12, 22, -10, 4, -2, -31, -4, 11, -16, -39, -26, -41, -39, -87, -19, -17, -19, 31, -4, 14, 14, -35, -2, 5, -5, -4, -18, 20, -7, -26, 76, -2, 4, -2, 29, 33, 
  20, 43, -1, -15, -3, 6, 22, 30, -11, -36, -6, 51, 17, 25, 3, 28, 33, -18, -48, 60, 29, 16, -17, 20, 43, 24, 2, 28, -30, -15, 5, 13, 17, -3, 9, 18, -10, -49, -34, -18, -52, -23, -23, -41, -5, -3, 12, 19, 30, 34, -16, -23, 39, -18, 31, 22, -16, -23, 54, 10, 34, 34, -27, 38, 
  9, 56, -42, 28, -93, 19, -29, -12, 31, -23, -49, -1, -30, 6, 22, -13, 13, 26, -38, 17, -9, 7, -9, -23, -4, 25, 26, -3, 3, 15, 17, 33, 55, -29, 3, 12, 11, 0, -31, -16, 22, -9, -33, 19, -62, -7, 9, -35, 16, -27, 11, 9, 59, -1, -15, 25, -36, 11, 13, 21, -96, 40, -7, -19, 
  9, 4, -24, -22, -41, 32, 14, -6, -16, 45, -14, -23, -13, 14, 8, -12, 26, -6, 22, -6, 27, -13, -15, -19, -56, -3, -2, 8, 8, -17, 11, 14, 23, 29, 3, -3, -17, -6, -3, 36, -48, -40, 10, -37, -8, -38, -22, -34, 25, -7, -16, 40, 42, 37, -6, -31, -19, 33, -2, -2, -23, -55, -3, 51, 
  -17, 26, -27, 29, 10, 1, 22, -19, -5, -13, 40, 0, -34, 32, 34, 26, 1, 27, -24, -33, 14, -41, 0, 23, -33, 27, -13, -21, 34, 16, 25, -34, -34, -5, 0, 25, 8, -17, 14, -20, -39, -31, 12, -14, -16, 21, 3, -34, -36, 1, -14, -27, -4, -2, 18, 32, -27, 29, -16, -24, 5, 28, 5, -32, 
  8, 10, -4, 34, 27, -20, 5, 7, -4, -4, -1, 9, 1, 22, 30, 35, 7, 11, 20, -23, -19, 20, -37, -29, -6, 17, 4, 5, 11, 0, -38, 21, 17, -19, 0, -22, -22, -33, -24, -25, -28, -16, 4, 14, 16, 19, 0, -8, 4, -6, 11, 0, 19, -11, -26, -21, 11, -8, 7, -28, 1, -34, 2, -5, 
  -21, 38, -51, 19, -24, 8, 4, 29, 23, 4, -50, -54, 28, -95, 1, -14, 4, 4, 0, -78, 36, -8, -18, -27, 1, -11, 18, 10, -24, 20, -67, 25, -47, -31, -9, 22, 38, 26, -29, -41, 15, -20, 36, 3, -9, 37, 39, 30, 29, 6, 4, 36, 32, -34, -23, -25, -26, -8, -48, -19, -24, -20, -32, -3, 
  -18, -7, -15, 11, -44, -24, -30, -29, -17, 79, 22, 3, -4, -40, 20, -26, -3, -22, 1, 43, -43, -47, 40, -31, 25, -19, 19, 4, 51, -29, -32, 32, 28, 29, -19, -32, -11, 18, 28, 31, 101, -28, 35, 47, 19, -23, 19, 36, -45, 33, 10, 16, -41, 20, -9, 6, -14, -34, -34, -47, -54, 9, -42, 11, 
  -30, 41, 45, 12, 22, -7, 21, 2, 18, 41, -5, 38, 2, 29, -13, -12, -34, 16, 41, 56, 60, -38, 39, 21, 25, -28, -29, -19, -8, -22, -23, 14, -38, 1, 14, -22, -39, -25, 2, -29, 10, -79, -16, 53, -14, -8, 0, -49, 2, 1, 19, 0, 49, 14, 16, 8, -38, -3, 17, -40, -7, 31, 1, 9, 
  4, -31, 6, 12, 0, -11, 29, -15, -35, -22, 29, -30, -19, 5, -21, 6, 9, -31, -22, -5, -2, 17, -14, 16, -6, 25, 24, 35, -30, -29, 17, 30, -22, 36, -6, -26, 15, -17, 2, -30, -11, -21, -28, -4, -17, -15, 4, -32, -6, 26, -14, 28, -25, 33, -24, 1, -3, -20, 4, -22, -7, -32, -35, 8, 
  -19, -17, 35, -6, 18, -30, 9, 26, -16, -33, -19, 47, -36, 24, -2, -19, 3, 0, -33, 21, -11, -2, 36, 33, 23, 4, -29, 34, -14, 6, 15, 0, 19, -25, -32, -2, -52, -21, -2, 19, -53, -18, -22, -23, -45, 2, 14, 1, -3, -36, 34, -15, 25, 21, -10, 29, 49, 35, 48, 36, 30, 43, 18, -8, 
  4, 10, -52, -29, 26, 20, 22, 28, -10, -25, 9, -39, -23, 11, -18, -12, 17, -21, -64, -43, 13, 79, 4, 29, 28, -1, 76, 6, 25, 30, -1, -3, 56, 9, 23, 14, -23, 10, 25, 2, -15, 33, -8, -46, -29, -10, -8, 16, -5, 7, 26, 5, 5, 3, 36, 12, 36, 21, -28, 46, 66, -2, -1, -47, 
  7, -34, -30, 1, -48, 13, -7, -2, 15, 71, -48, 36, 9, 1, -10, 0, 5, 15, 2, -34, -81, -52, -6, 13, -15, 23, 45, -6, 34, -32, 3, 33, 59, -5, -14, 24, -9, 35, -35, 50, -2, 50, 13, -36, 34, -27, -19, -121, -53, 28, -9, 10, 35, -13, 12, 6, -13, -7, 37, -26, 25, -9, 7, 71, 
  6, 27, 13, -2, 21, 16, 0, -17, 30, -28, 29, -40, 10, -26, 31, -31, 4, 8, 5, -35, -26, 0, 6, 8, 20, -28, 13, -16, 22, 32, 27, 22, 13, 24, -28, 33, -42, -24, 12, -33, -32, 17, -13, -31, 8, 12, 1, 12, -19, -33, -30, -18, -21, -38, -39, 16, -5, -14, -20, -11, 20, -17, -7, -15, 
  13, -35, 5, 24, -26, 13, 9, -15, 13, 18, -27, 27, -7, -1, 24, 3, -8, 23, -38, -9, 14, 10, -10, -34, -6, -34, 18, 14, 10, -9, -29, 2, 29, -29, 3, 0, -8, 9, -6, -22, 5, -6, -28, 9, -9, -20, -9, 16, -31, -7, -14, -20, -31, -17, -29, 11, 21, 17, -36, -27, 19, -7, 9, 8, 
  -17, 21, -37, 14, 19, 24, -21, -23, 31, -26, -36, 2, -30, -4, -19, -36, -28, 9, 18, -27, 1, -34, 5, -25, -24, 18, -35, 21, -24, 0, -8, 11, 7, 32, -6, 24, -14, 0, -34, -7, -15, -2, 20, -11, 11, -2, 15, -12, -30, 10, 33, -31, 14, -1, -15, -35, -23, 14, 23, -11, 19, -9, -22, -35, 
  -29, 12, 11, -3, 16, -18, -4, 5, 36, -47, 85, 1, 23, -28, -12, -24, 4, 32, 14, 57, -27, 99, -13, -18, -16, 5, 9, 20, -35, 7, 32, -19, -7, 2, 20, 19, -46, -64, 5, 15, -93, -7, -4, -13, 18, -19, -5, 25, 6, 32, -29, -63, 11, -5, -39, 27, -27, 8, 35, 16, -30, -58, 12, -28, 
  -24, -73, -13, -25, -11, 17, 32, -1, -20, -10, 49, -29, 28, 50, -6, -6, 23, 13, -18, -37, 13, 8, 12, 28, -70, -18, 3, -25, -24, 4, 46, 2, -58, -9, -22, 12, -34, -20, -3, 36, 13, -10, -12, -12, 32, 5, -73, -48, 28, -8, -15, -27, 18, 3, -20, -32, -56, -3, -3, -14, 61, 34, 43, 32, 
  1, 17, 7, 30, 27, 28, -11, -2, 33, -12, 6, -61, 20, -27, 25, 31, 17, 26, -32, -52, 54, -35, 6, -2, 1, 14, -37, -8, -1, 7, -6, -32, -49, -17, 0, -33, -56, -15, -27, 23, -37, 37, 2, 34, 4, 41, 40, -91, -3, 28, 27, 55, 58, -1, 47, -25, -50, 12, -1, 8, 48, -1, -8, -39, 
  28, -3, -2, 11, 34, -20, -32, -30, 1, -29, 18, -33, 5, -61, -32, -13, 31, -12, -75, -28, -5, 54, 27, -10, 25, -13, 35, -33, 56, -11, -15, -6, -55, 29, 14, -31, -9, -3, -27, 1, 37, 20, 15, 43, 54, -7, 22, -55, -32, 22, 15, -8, -12, 3, 38, 30, -41, 11, 2, 9, -40, -14, -33, -9, 
  -33, 8, -36, -24, 19, -23, 16, -3, 3, -25, -62, 23, 4, -46, 4, 25, 20, 24, 2, -9, -22, 62, -2, -14, 16, -21, 55, -20, -21, -15, -45, -34, 28, 12, -20, 22, 25, 16, -5, -28, 46, 58, -35, -47, -41, 13, -8, 91, -64, -35, 20, 16, -104, 7, 15, 29, -14, -16, -34, -15, 22, -3, -44, 5, 
  14, -8, 6, -6, 7, -5, -2, 7, -23, 33, -5, 17, 7, -54, -27, -11, -22, 4, 17, 9, -34, 40, 42, -31, 32, 20, 62, 0, 22, -16, -47, 20, -19, 31, -32, 35, 19, -6, 21, -40, 2, -28, 19, -7, 3, -16, 33, -22, 12, 18, 21, -25, 29, 10, -17, 10, -9, -36, 0, -12, 10, -1, -50, -59, 
  26, 15, -29, 24, -22, -17, -23, 0, 34, -5, -21, -5, 33, -36, -5, -14, 34, -7, 22, 1, -32, -25, -38, 3, -42, -31, -13, 24, -37, -31, -8, 11, 7, 30, -16, 13, -8, 24, -9, -44, -26, -37, -36, 15, 18, -14, -21, -13, 16, 32, -19, -6, 8, 1, 28, 12, 22, -34, 11, 22, -16, -27, 11, -17, 
  29, 0, -41, 18, 45, 34, -23, 4, 4, -17, 5, 1, -25, 29, 8, -28, -26, -16, 6, -115, 41, 40, 37, 24, -38, 3, 11, -35, 26, -22, -11, 16, 1, 17, 6, -9, 1, 51, -19, 26, -23, -13, -1, -3, 19, 34, -14, -25, -30, 7, -24, 28, 18, -31, -6, -10, 10, 18, -35, 43, 61, -13, 15, 19, 
  11, -34, 33, 32, 51, 19, 15, -9, 4, 16, 7, -31, 6, 37, -33, 14, -36, 3, 37, -56, 16, 18, 28, -27, 24, 6, -25, -11, -8, 35, 26, 3, -24, 1, 5, 31, 5, 59, -14, -33, -19, 44, 0, 12, -17, -26, -12, -16, -16, 15, 0, 0, -28, 10, -3, -11, 21, 15, 9, 16, 57, 8, 36, -33, 
  21, -21, 2, 32, 9, 32, 22, -21, -17, -29, 24, -35, -24, -55, 25, -3, 29, -24, 10, -23, -11, 37, 36, -11, 13, -21, -4, -7, 30, 33, -41, 21, -9, 6, -5, 34, 32, -23, 23, -27, 32, 5, 5, 37, 2, 13, 17, 23, -38, -10, -26, 17, 56, -6, 26, 17, -38, 20, -47, -44, 15, -1, -84, -19, 
  -5, 49, 2, 5, -22, 28, -18, 3, 33, 12, 16, -42, -9, 1, 0, -20, 19, 27, 47, -42, -8, -45, 52, 35, -45, 33, -59, -7, -93, 17, -60, -33, -49, -15, 10, -18, 6, 15, -5, -7, -14, 27, 33, 30, 35, 0, 45, 77, -16, -18, 34, 71, 45, 18, 3, -22, -5, 1, -77, -13, -38, 5, -46, 8, 
  -34, 10, 29, 22, -23, 2, 3, -8, 20, -32, -35, -33, 34, -10, -10, -23, -10, -25, 2, -18, -13, -11, -39, 26, 5, -2, 23, 24, -4, -25, -25, -17, 17, -6, -9, -13, 11, 23, -6, -8, -25, 0, -29, -15, 28, -23, 19, 17, 12, 33, 16, -40, -9, 25, -9, 33, -33, 3, -27, -39, -17, 13, -14, 3, 
  -25, -36, 27, -30, -57, 24, 20, 30, 16, -33, 66, 51, -4, 32, -15, 22, 22, -5, -42, 54, -20, -50, 37, 6, -20, -15, 2, 21, 10, -38, 14, -22, -94, -30, 26, 8, -7, 24, -18, -4, -95, -25, 19, -36, 44, -20, -22, -4, -6, 21, -23, 9, 2, -34, -1, -16, 12, -35, 57, -42, -29, 56, 0, -37, 
  21, 1, -69, 0, -3, 2, 29, 21, 14, 25, -27, 39, -3, -23, 32, -26, 31, 2, -2, -80, -19, -31, 19, -34, 26, 15, 93, 29, 80, 21, -55, 28, 121, 33, 10, 12, -14, 15, 15, 47, -8, -30, 21, -31, 34, -21, -22, -7, -77, -34, -5, -22, 32, -13, 47, -31, 38, -21, 23, 9, 15, 28, -15, 5, 
  -7, -23, 15, 34, 3, -22, 6, 8, -15, 17, 1, -1, 4, -58, 33, -11, -21, 27, 9, -33, -13, 17, -42, -18, 36, -27, 14, 27, 54, 28, 7, -2, 12, -22, -4, 5, -35, -22, -5, 26, 57, 28, 36, -20, -35, 4, -44, -21, 9, 34, -11, 15, 13, -9, 1, -33, -25, -9, 42, -17, 0, -28, 10, -36, 
  32, -4, -28, -18, 34, 2, 28, 27, 3, -59, 16, -2, 32, 4, 0, -26, 5, 32, 7, 84, 35, 17, -35, 5, 34, -35, -21, 23, -11, -6, 37, -28, -84, -1, -21, 22, -2, -36, -30, -40, -8, -71, 25, 48, 9, 15, 21, -22, 8, 19, -17, 9, 50, 1, -22, -30, -79, 26, 43, 2, -5, 6, -3, 18, 
  -25, 11, 26, -5, 38, 4, 25, 11, 0, -52, -5, 60, 24, -52, -6, 9, 17, -4, -49, 62, -26, 34, -2, -5, 7, -28, -22, -7, 9, 10, -10, -15, -3, -1, -23, -7, 29, 20, 8, -50, -13, 17, -17, 15, -14, 25, 30, -8, -18, 10, 30, -16, -90, -37, 15, 18, 36, 21, 1, -14, 42, 49, -71, 47, 
  -19, -11, 31, 18, -30, 3, 35, -22, -7, -25, 31, 53, -17, 9, 14, -13, -17, 26, -60, -12, 20, 5, 30, 7, 30, -32, 17, -27, 32, 30, 38, 33, 34, -11, 2, -31, -49, -28, -31, 20, 20, 6, -33, 28, -3, 13, -8, -33, 0, -30, -8, -33, -3, -5, 3, -27, -10, 26, 96, 17, 33, 2, 31, -40, 
  2, 59, 54, -4, 25, -16, 32, 35, 7, 34, -41, 17, 32, -56, 21, -11, -33, 29, 73, -5, 50, -1, -13, 32, 40, -9, -9, -5, -22, 1, 5, -1, -30, -21, 14, -14, 20, -21, -29, -63, 34, -3, 1, 9, -34, 30, 20, -14, 20, -9, -22, 57, -47, -9, 14, -34, -8, 36, 1, -8, -43, 4, -38, -17, 
  -1, 34, -2, 32, 41, 30, -1, -31, -23, 0, 11, 14, 7, -63, 18, 24, -1, -23, -52, 46, -16, -6, 21, 15, -2, 19, 20, -25, 3, -19, 32, -10, -30, -21, -18, 19, 25, -29, 24, -34, 29, -28, 23, -2, -8, 32, 15, -45, -13, -9, 24, -12, -1, 5, -24, -3, -32, 20, 33, -27, -52, 22, -29, 8, 
  16, 13, 62, -20, -11, 19, 5, 29, -15, -7, -18, 76, 33, -1, -17, -2, 24, 1, 29, -14, 18, -15, 47, -5, -16, 15, -53, -9, -48, -3, -24, -26, 86, 1, -2, -27, 7, 9, -20, -39, -12, 27, -19, -41, -22, -9, -39, -26, -16, 2, 28, -27, -53, 8, 11, 31, 54, 10, -1, 52, 39, -12, -14, -24, 
  29, 17, -36, -34, -13, -9, -27, -18, 19, -39, -13, -40, -1, 26, -13, 11, 12, 29, -33, 18, -34, 3, -28, -9, -33, -21, 7, -31, -40, -22, -8, 19, -10, 24, -18, -2, 29, -5, 27, -19, 6, 7, 16, -7, -13, 21, -17, -25, 20, 5, -2, -17, -29, -22, -35, -24, -7, -16, -29, -19, 12, 10, 2, 7, 
  -7, -21, -40, -36, -14, 21, 16, -13, 17, -37, 57, -49, 8, 7, 28, -6, -34, 10, -76, -7, -101, -34, 14, 3, -25, -8, 30, -18, -10, 14, -42, -3, -16, 27, -14, 0, -31, 49, 2, -21, -65, 28, 41, 11, -9, 1, 17, -63, -60, -13, -33, 15, 52, -19, 49, 4, 22, 4, -104, 31, 35, 11, -5, -20, 
  -8, -22, 52, 20, -52, 12, -18, 19, -7, 24, 30, -14, 30, 11, -25, -26, -5, -15, -44, 30, -30, 20, -23, -22, 8, -28, 59, 0, 35, -6, -28, -29, -1, -30, 3, -5, -2, 25, 12, 33, 48, 41, 24, 51, -15, -37, -51, 27, 33, 25, 11, -12, -39, -30, -20, 25, -22, 22, -35, -3, 80, -31, 37, 15, 
  -4, -2, -23, -16, 22, 11, 33, -21, 9, 27, 21, 23, -5, 56, -22, 31, -32, -21, -33, -53, -25, 5, 39, 7, 14, -9, -5, -17, 25, 23, -8, 21, 2, -4, -31, 6, -23, 20, -26, -32, 1, 6, 7, 14, 10, -16, 1, -4, -10, -5, -30, 1, -52, 35, -17, -26, 24, -29, 11, 30, 45, 21, 18, -22, 
  -1, 21, 27, -25, -39, -10, 22, 12, -1, -1, -31, 71, 32, 19, -1, -11, -27, -27, 32, -33, -29, -27, 32, 31, 11, 32, -16, -13, 25, -5, 5, 8, 39, -31, -6, -32, 5, 33, 8, -27, 47, 9, 6, 11, 38, 39, -20, -44, 2, 1, 13, -40, -10, 6, 35, -4, 38, 10, 28, 16, -15, 49, -21, 10, 
  20, -2, -17, 36, 25, 9, 18, 6, 10, -27, -23, 6, 28, -34, -2, -13, 18, -14, -33, 4, -8, -6, 33, 25, 3, 5, -33, 11, 6, -20, -7, -13, -33, 15, -29, 4, -16, -33, -3, 16, -32, -15, -16, -34, 2, 3, -4, 9, -21, -6, -30, -1, -10, -18, 23, -30, -11, 21, 31, -25, -35, -10, 21, 13, 
  -10, -33, -15, 14, -48, 24, 14, 7, -35, 27, 1, 62, 5, 46, 4, -21, 18, -9, 7, -52, -16, -37, 27, -12, -46, 11, 49, -16, 43, -25, -41, 27, 127, 25, -35, 25, 7, 73, -9, 31, -12, -10, -2, -54, 29, -4, -6, 2, -45, -5, 34, -35, -40, 11, 33, -22, 89, -32, -3, 54, 2, 6, 6, 48, 
  22, -26, -2, -28, 34, -14, 0, 16, -30, 5, -48, 70, -9, 19, -12, -27, -9, 17, 0, -6, 21, 37, -7, 33, 5, 24, 4, -33, -3, 1, -10, 6, 72, 17, -1, -6, -23, 13, 20, 26, -58, -9, -72, -3, -44, 22, 31, -40, 26, -3, 35, 2, -110, -22, 31, -33, 53, 7, 42, 57, 72, 16, -13, 1, 
  14, -27, 21, -19, -17, -6, -19, 2, -12, 39, 0, -5, 31, 34, -11, 34, -12, -23, -11, 37, 53, 23, -31, -12, -4, -5, 3, 3, 56, 6, 46, 19, -65, 4, -4, -17, -5, -60, 17, 13, -33, -28, -65, -7, -33, 34, -24, -35, 44, -5, -16, -51, -5, 13, -27, -18, -58, 15, 43, -32, -19, -17, 19, -37, 
  21, -2, 5, 1, -27, 8, -32, -11, -19, 60, -33, 60, 6, 23, -12, -14, -5, 31, 1, 104, 0, 33, -15, 21, 15, -30, -8, 12, 18, -4, 25, -26, 23, -17, 7, -22, 55, -52, 34, 24, 36, -40, -34, -2, 22, -1, -12, 72, 32, 33, -25, -4, -41, 1, -34, -3, 41, 18, 22, 9, -44, 19, -4, 58, 
};
const TfArray<2, int> tensor_dimension3 = { 2, { 64,64 } };
const TfArray<1, float> quant3_scale = { 1, { 0.0060723144561052322, } };
const TfArray<1, int> quant3_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant3 = { (TfLiteFloatArray*)&quant3_scale, (TfLiteIntArray*)&quant3_zero, 0 };
const ALIGN(16) int32_t tensor_data4[64] = { 3951, 1673, -1977, -31, -1597, -18, 1322, -3589, 5245, 4921, -113, 3767, -1806, 1845, -3240, -1482, 0, 757, 3740, 5414, -1592, 42, -568, 138, 1115, 513, 0, -196, 1416, -1406, -629, -262, -772, -179, -6039, 816, 2501, 195, 5042, -999, -2824, -3486, 4234, 2008, -414, -2457, 1484, 732, 2497, 4179, -845, 4360, 5086, 3054, -1012, -1328, -3790, -4040, -1018, -262, -2183, 1617, -3246, 1941, };
const TfArray<1, int> tensor_dimension4 = { 1, { 64 } };
const TfArray<1, float> quant4_scale = { 1, { 6.0527912864927202e-05, } };
const TfArray<1, int> quant4_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant4 = { (TfLiteFloatArray*)&quant4_scale, (TfLiteIntArray*)&quant4_zero, 0 };
const ALIGN(16) int8_t tensor_data5[64*64] = { 
  -11, 15, -3, 16, 5, -5, -28, 17, 22, -10, -11, 10, -4, -27, -17, -30, 24, -2, -8, -2, -22, 13, -13, -12, -13, -5, 1, -24, -25, 26, -8, -18, 3, -14, -19, 17, -15, 5, -6, 1, 2, -9, -23, -17, 27, -10, 13, 23, 27, 13, -24, -14, -24, -28, 21, 11, -1, -19, -21, -10, 19, 24, -30, 2, 
  55, -48, -25, -33, -12, -18, 28, -22, -65, 10, 16, 58, -26, -93, 5, -45, 0, 43, 4, -2, 13, -21, -17, -53, -37, 4, 5, 3, 13, -20, 9, -10, 12, 7, 40, -29, -31, -37, 36, 13, 8, 22, 1, -53, 2, -16, 7, -45, 38, 23, -14, 32, 4, 36, -7, -66, -13, 22, -10, 8, 8, 45, 8, 10, 
  6, -9, -3, 5, -27, -2, 37, -23, -54, -15, 47, 40, 2, 28, -39, 15, 9, 4, 42, 35, -40, 9, 22, -47, -6, 22, -21, -2, -17, 17, 4, 2, 23, 33, -3, -42, -39, 60, -38, 11, -61, -9, 12, -37, 20, 67, 22, 55, -19, 19, -6, 13, 10, 44, -1, -58, -18, -16, 24, -10, 39, 14, -8, 38, 
  -10, -13, 25, 6, -24, 90, 25, 24, 85, 3, 5, 61, -5, 51, 11, 30, 9, 24, -2, 27, -45, 30, -4, -12, 8, 27, 4, -13, -29, 16, -21, -9, -27, 29, -89, 15, -26, -68, -61, -7, -16, 2, -33, -15, -25, 29, -19, -24, -9, -42, -26, 10, 9, 34, -17, -6, 0, -26, 30, 5, -8, 6, -62, -27, 
  -47, -26, 12, 50, 19, 15, -17, 15, 30, 22, -13, 19, 3, -56, 7, 22, 9, -39, -36, 33, 14, 3, -13, 41, -10, -42, 2, -11, 14, 64, -20, 16, 3, 16, 36, 38, 5, 32, -18, -28, 8, 14, 0, -91, 2, 10, 53, 17, -59, -18, 22, -24, -3, -43, -11, -11, -13, 12, 0, -23, -7, -31, 13, -27, 
  -16, 61, -27, 19, -20, 16, -48, -9, 30, 14, 14, 21, 21, 5, 5, 40, -5, 8, 48, 1, -7, -24, 21, 19, -49, -16, -8, 6, 39, -6, -6, -25, -16, 7, 19, 2, -12, -58, -16, -21, 75, 13, 10, -36, -14, 16, 20, -38, 6, -13, 15, 2, -16, 19, 27, -34, -8, -1, 7, -11, 74, 27, 27, -2, 
  -11, -35, -26, 11, 36, -6, -5, 13, 34, 31, 1, -34, 0, -65, -20, -8, 24, -18, 3, 28, 11, 0, 2, 30, 37, 5, -18, -14, -4, -34, 6, -21, 29, 18, -28, -18, -23, -15, 18, 28, -15, 3, -8, 27, 0, -22, 21, -21, -11, 13, -27, -6, -9, -2, -15, 9, -7, 14, -9, 11, 46, -2, -36, 18, 
  16, -6, -36, -1, 17, 9, -19, 20, -8, -15, -15, -21, -2, -13, -32, -31, -4, 5, 5, -34, 16, -7, 9, -28, -9, -3, -2, 1, -4, -16, 2, 18, 12, -27, -19, 19, -14, -28, 21, 9, 7, -3, -12, -5, 17, -25, 3, -22, -28, 14, -11, -6, -29, -20, -13, -2, -20, 16, 10, 0, -4, 5, 1, 18, 
  20, -13, 39, 2, 27, 12, 22, 53, -48, -81, -1, -24, 45, -74, -10, 32, -21, 6, 19, 4, -25, -23, -8, -19, 28, 4, 18, 23, -10, 2, 19, -24, -19, 2, 26, -24, -33, -58, -36, -27, -15, -2, -48, -5, -4, 44, 2, 1, 44, -82, 23, -55, -79, -7, 22, 33, 23, -21, 34, 29, 12, -27, -17, 21, 
  24, 25, -57, 23, 34, 62, 45, 34, 8, -12, 6, -8, -12, 35, -14, 1, -6, -36, 14, 31, 62, -26, 7, -12, 20, 10, -16, -7, -10, 22, 6, 12, 13, -11, 28, -50, 22, -13, 7, 14, -22, -55, -5, -33, -10, -4, 49, 39, -24, -10, 14, -12, 21, 21, 10, 53, -5, -35, -4, -23, 2, 5, -1, -9, 
  -20, -9, -9, -59, -17, 47, 32, 25, 35, 2, -23, -23, 20, -74, 47, 35, 1, -28, 30, 4, -16, -9, 16, 68, -20, -4, -8, 28, 11, -6, -15, 27, 2, -38, -19, -12, 6, -35, -13, -33, -2, 19, -14, 10, 27, 2, 24, -45, -14, -23, -6, -10, -14, -28, -4, 32, -3, 40, 33, 11, 47, 29, 10, 1, 
  41, 12, -4, -1, -23, 31, -4, 23, -21, -56, 25, 18, 38, 13, -4, -27, 8, 61, 54, 39, -1, -2, 7, -23, -10, 48, 19, 32, -24, -10, -20, 19, 9, -10, 27, -46, -30, 0, -24, -6, -5, 0, -14, 3, 0, 19, -24, -51, 45, 28, 33, -26, 16, 40, 18, 53, -5, -12, 3, 10, 28, 2, 6, 32, 
  9, 22, -3, 29, 11, -24, 13, -2, 14, -28, -14, -27, 7, -21, -20, -29, -3, -21, -31, -7, -2, 27, -4, -5, 23, -17, 6, -5, 25, 9, -15, 15, 24, 15, 6, -31, -10, 23, -29, -4, -32, -11, 11, -3, -7, -29, -26, -9, 0, -10, 4, -17, 8, -22, -13, 22, -21, -13, -29, -24, -4, -4, -15, 22, 
  9, -10, 14, 8, -19, 23, -16, 0, 5, -1, -28, 6, -16, 2, -30, -24, 26, 18, -29, -31, 14, -1, 16, 2, 24, -25, 24, 15, -17, -29, 4, -6, 27, -1, 22, -23, -11, 8, -23, 23, -26, -11, 1, 12, 3, 16, -14, -26, 10, 9, -1, -14, -23, -16, 29, -5, -14, 14, 6, -13, -29, -20, -15, 12, 
  43, -56, 25, -13, -29, 2, 17, -32, -44, -11, -40, -45, -27, 37, -5, -12, 10, -51, 11, -5, -37, -22, -25, -14, 39, -30, 0, -28, 25, 17, 8, 20, 21, -69, -13, -4, 15, 9, 23, 14, -35, -35, 34, 9, -9, 34, 16, 7, -7, 49, -29, -21, 32, 0, -4, -10, 13, 12, 2, -13, -17, 14, 53, 16, 
  -28, 52, -33, 46, -61, 3, -31, -22, 95, 54, 6, 21, 23, 84, 3, 19, 27, -23, -18, 27, -69, -2, 18, 59, -8, -19, -1, -38, -34, -13, -12, 28, 22, -48, -33, -34, 1, 44, 20, 8, 13, -58, -3, 11, 29, -6, 10, -5, -24, -10, -62, 8, 0, -6, 9, 4, -54, -26, -24, 27, -51, -18, -54, -3, 
  -12, -74, -12, -1, 53, -13, -28, 16, -40, -64, -3, -25, 12, -43, 5, 12, -19, -8, -90, -76, 46, 11, 4, 8, 10, -34, -26, -27, -5, 67, 13, 24, 15, -54, -32, 30, 5, 7, -60, 19, 5, -1, -7, 22, -16, -10, -17, -33, -45, -56, -29, -65, -76, 0, -27, 44, 33, -17, 4, -7, 21, -65, -18, 10, 
  58, -91, -2, -16, 27, -46, 46, -27, -78, -2, -28, 12, -23, -60, -28, -54, 25, -4, 22, 12, -35, -1, -8, -39, 25, -41, -19, -57, 4, -27, 1, -4, -29, 0, -21, -19, 19, 27, 30, 18, -65, -27, -1, -7, -9, -70, -26, -29, 21, 44, -19, 31, 50, -1, -28, -8, -102, -22, -15, -24, -110, 18, -64, 44, 
  28, 14, -31, 30, -23, 14, 0, 24, 76, 67, 1, 46, 5, 15, -46, -4, -26, -3, 38, -18, -9, 10, -25, -87, -77, 15, -25, 15, 20, -1, 15, 12, -19, 103, -36, 1, -38, 43, -25, -11, -9, -19, -28, -85, -9, 72, -42, 1, -12, -4, 0, 0, -21, 77, 5, -13, 19, 11, 22, -19, -18, 30, 14, -4, 
  -1, 18, -18, 0, 9, -21, -10, 7, -12, -18, -12, -16, -15, -4, 3, 3, -1, 20, 18, -13, -8, 9, 4, 24, -7, -2, 27, -21, 2, 16, 5, -5, 9, -4, -28, -15, -14, -5, -14, 21, 16, 14, 15, 15, -20, -28, -15, -25, -28, -28, 10, -18, 10, -20, 28, -7, 2, -28, 3, -11, -15, -9, -2, -27, 
  -9, 29, -56, 18, 22, 31, -86, -39, -2, 30, 22, 36, 20, 0, -3, 1, 7, 38, -23, -27, -53, -2, 3, 35, 4, -27, -19, -16, 9, -18, 10, -13, 19, -8, -20, -4, -16, 31, -18, -24, 34, -6, -17, 19, -17, -4, 17, 18, -7, -23, -24, 10, 27, -39, -23, 8, -25, -40, -39, 10, -27, -37, -9, 3, 
  8, 22, -5, 0, 69, 3, 7, 33, -66, 31, -26, -15, 0, 3, -14, -37, 11, 31, 10, -25, 45, -9, -24, -23, 0, 31, -22, 12, -18, 3, -28, 31, 15, 5, 65, -29, -21, 23, 25, 6, -22, -24, 20, 31, 2, -26, 16, -28, 6, 28, -7, 25, 11, -75, 17, -7, 31, -27, 8, -12, -30, -69, 58, 34, 
  6, -30, 14, -8, -44, -30, 14, -93, -2, 10, -47, -4, -1, 13, 13, -9, 4, -37, -3, 25, -18, 1, 20, -3, -19, 7, -27, -29, -4, -12, -7, 11, -12, -50, 0, 34, 26, -40, 19, 7, -19, 7, -2, -41, -2, -29, 14, -36, 31, 39, -7, 18, 33, 29, -15, -4, -72, 1, 2, 6, -70, -33, -16, -39, 
  5, 19, 4, 47, -8, -31, 46, 0, 21, -7, -33, -23, 37, -76, -17, -10, -25, -31, -43, 3, -21, 21, -9, 16, -13, 11, 5, -13, 5, -21, 23, 20, 32, -29, 43, -4, 21, 58, 26, 8, -28, 13, 33, -54, -10, -62, 4, 25, 23, 59, 43, -21, 2, 14, 11, -8, 35, -7, 28, -18, -23, 12, 14, 9, 
  -28, -6, -11, -14, 44, -22, -51, -5, 17, 2, -41, -28, 20, 43, 22, 22, -10, -51, 0, -4, 24, 34, 13, 26, 18, -2, -28, -37, -55, 59, -16, -29, -24, 38, -3, 4, -28, -39, 42, -6, 11, 1, -26, 21, 26, 4, -39, -44, 23, -27, -16, 4, 56, 13, -22, 3, 1, -34, -13, -20, -14, -40, -47, -22, 
  8, 15, -11, 19, -50, -23, 21, -17, 51, 12, 7, 3, 17, 13, 18, -24, -22, 19, 38, 0, -19, 2, 24, -27, -43, 32, 21, -27, -17, 11, 26, 19, -4, 81, -46, 27, -11, -7, -44, -16, 22, 15, -35, -73, 4, 65, -39, 3, 57, -9, -19, 17, 8, 54, -4, -44, -61, 25, 17, -25, 0, 47, -21, -26, 
  -81, 13, 34, 18, 26, 22, -1, -29, -20, -29, 27, -10, 36, 32, 27, 11, -6, -40, -57, 5, 44, -10, -24, 55, 22, -6, -18, 31, 24, 70, 10, -30, 8, 110, 36, 33, 3, -32, 1, 7, 37, 13, -12, -57, -15, 48, 26, 13, -47, -44, 7, -17, 39, -29, 3, -64, -8, 7, 6, -5, 69, 11, -11, -48, 
  -65, 25, -3, -24, 32, -7, -36, -28, -3, -4, 3, -8, 4, -40, 47, 11, -11, 5, -1, 8, 28, 30, 11, 29, 7, 34, 21, -5, -7, 9, -12, 24, -25, 8, 48, 24, 44, -49, 10, 0, 0, 21, 31, 5, -19, 29, -28, -34, 56, -34, 18, 3, 24, -46, 24, -39, 5, -6, -2, -30, -10, 22, -15, -9, 
  -81, 16, 10, -65, 24, 29, -39, 41, 21, -7, -86, -32, 2, 35, 24, 3, 29, 33, -34, -73, 23, 9, -22, -33, 34, -15, -3, -39, -3, 9, -21, -27, -5, 19, 28, 47, 25, 7, -38, -24, 6, 37, 3, 1, 4, 86, 4, -18, -10, -64, -15, -26, -36, -67, 4, 28, 21, 16, 10, 26, -20, -117, -22, -47, 
  -7, -12, -7, 51, -69, -10, 44, 32, 7, 51, -18, 19, 27, -57, 6, -22, 8, -4, -44, 13, 1, -13, -5, -10, 70, -3, -23, -21, 11, 24, -21, 0, -4, 54, -10, -36, -10, 63, 14, 20, -16, 9, -15, -30, -29, 1, 18, -1, -45, -27, 25, 21, -25, 30, 20, -59, 22, -4, 26, -16, 37, 30, -47, -16, 
  -11, 0, -25, -17, 13, -15, 3, 23, -15, 12, -23, 6, 10, -9, 19, -7, 17, 11, -16, -10, -30, -15, 15, -12, -14, 17, 8, 15, 22, 6, -4, -12, -11, -25, 2, 12, -16, -4, 11, 3, -7, -14, 0, -7, -26, 4, 3, -28, -5, -27, -20, -18, -10, -30, 1, -9, -29, -18, -25, 27, 17, 0, -5, 0, 
  -63, 32, 16, 17, -62, 21, 3, 14, 52, 57, -10, -7, 29, -87, 25, 25, 7, 19, 13, -13, -8, -18, 10, 16, 16, 28, -24, -6, 31, -9, -21, -23, -14, 1, 19, 19, 4, -77, 7, -4, 23, 30, -3, 1, 5, 78, 16, -23, 31, -32, -25, -14, -41, -25, -6, -35, -33, 18, 16, 5, 32, -6, -20, -38, 
  1, 29, -29, 52, -56, 41, 13, -3, 87, 32, -37, 54, 27, 56, -42, -1, -5, -16, 1, 0, 20, 2, -9, 28, -58, 6, 16, 1, 6, 73, 4, 13, -25, 75, -14, -74, -13, 43, -9, 38, 47, -7, -6, -48, 21, -54, -11, -39, -62, 35, -23, -37, -15, 51, -12, -20, -17, -23, -4, 10, 37, 21, -80, 11, 
  22, -27, -7, -13, 50, 22, 49, -14, -86, -71, 7, -17, 29, 7, 6, -36, 28, -29, 14, -20, -4, 12, 8, -18, 41, 4, -16, 0, -31, -9, -14, 7, 3, 11, 21, -27, 11, -16, 3, -5, -37, -24, -9, -50, 20, -12, 19, 36, 20, 17, 17, 27, 11, 23, -17, -29, 28, -31, 1, 23, -53, -5, -6, 5, 
  -5, -9, 5, -53, -59, 6, -35, -19, 72, 43, -24, -30, 15, -31, 24, -24, -28, 0, 11, -28, -41, 7, -10, -35, -76, 10, 29, -5, 26, -34, 7, -14, 5, 3, -48, -3, 19, -72, 34, -28, 31, -4, 20, -25, -23, -79, -43, -5, 47, 41, 13, 8, -10, 40, 6, -59, 6, 28, 26, 27, 2, 10, -16, -41, 
  -45, 1, 18, -32, -22, 38, 14, 29, -88, -15, -42, -90, 29, 6, -4, -49, 15, -23, -23, -26, -23, -14, -19, -31, 53, 24, -27, -3, -35, -31, -10, -3, 2, -18, 27, -19, 41, -16, 26, 10, -44, 31, 25, -16, -3, 34, 27, -8, 11, -27, 9, 44, 44, -18, -16, -79, -10, 4, 35, 25, -29, -34, 51, 8, 
  -1, 14, -2, -13, 20, -10, 21, -10, -42, -41, -12, 13, 9, -15, 13, -2, -11, -23, -20, 16, -18, 23, 26, 25, -31, -19, -12, -13, 0, 29, 10, 25, -2, 24, 3, 5, -20, -29, -2, 5, -28, -22, -28, 4, 28, -18, 2, 10, -25, -18, 20, -13, -24, -14, 29, 10, -26, -13, -16, 26, 7, -35, 25, -32, 
  24, 2, 43, 18, -26, 48, 7, 59, 17, 21, -27, -28, 17, -35, 20, 47, 0, 29, -29, 37, -2, -25, 18, 9, -5, 9, 22, -16, -16, -49, -32, 0, -23, -39, 4, 8, 2, -10, -15, -8, -16, 14, 6, 66, 24, -9, -64, -3, 2, -28, 6, -11, 21, 30, -20, 38, 6, 27, 12, -26, -32, -20, -9, -8, 
  -46, 17, -11, 31, 60, 21, -27, 1, 39, 1, 26, 13, 17, 6, 36, -11, 13, -47, 4, 31, -18, 3, 9, -3, -28, 4, -23, -29, 17, -61, 16, 15, -13, -30, 13, 26, -57, 15, -3, -3, 14, 25, -3, 9, 26, -41, -23, -9, 15, -6, 5, -51, -3, -71, -22, -28, -24, -4, -13, 1, -43, -11, -29, -20, 
  34, 47, -25, -16, 66, 27, -45, 2, -37, -15, 26, -4, 13, 51, -4, -21, -15, 14, 37, 63, 7, -10, 26, 0, -58, 13, -25, -11, -9, 25, 12, 5, 14, -55, 16, 21, 5, -25, 1, -14, 2, -24, 6, -22, 5, -3, 26, -23, 50, -17, -7, 46, 49, -70, 18, -54, 3, -54, -17, 3, -10, 20, 2, 4, 
  9, 27, -34, -41, 56, -1, -31, -35, -24, -8, -26, -4, 0, 60, -28, 4, 14, -8, 6, 34, 23, -9, -26, 37, 16, 22, -9, -14, 13, -11, -14, -26, -4, -28, -9, 46, 35, -62, 22, 14, -17, -35, 51, 12, -12, 26, -27, 48, 64, 17, -21, 31, 75, -61, -12, 1, -10, -60, -1, -25, -101, -44, 9, 12, 
  -19, -55, 17, 29, -18, -70, 36, -29, -50, -13, 3, -28, -16, -54, 33, -28, 16, -29, -8, -80, -5, 2, 2, -21, 23, 27, 26, -18, -4, 5, -17, 5, -13, 63, 38, 22, 25, 2, 11, 6, 37, 0, 7, -16, 26, -56, 65, 9, -12, -13, 28, 6, 24, 6, 24, -116, -28, 24, 28, -23, 32, 48, 39, -26, 
  57, 4, 6, 16, -29, 17, 43, 19, -5, -25, 47, 31, 7, -70, 14, -12, -28, 9, 0, -13, -21, -36, -27, 5, -33, -27, -23, 34, 35, -25, 2, -18, 5, 44, -31, -5, -18, 86, -28, 6, -3, 6, -29, -20, 0, -66, 39, 20, -23, -8, 33, -7, 14, 31, -14, -121, 15, 10, 19, -11, 44, 57, 11, -3, 
  13, -96, -2, -50, -36, -44, -5, -41, -45, 6, -5, 15, -40, -93, 5, 16, 29, -42, 53, -18, -51, -11, -25, 22, -15, -26, -20, -14, 30, -22, 7, -17, -22, -42, -17, 7, 26, -37, 11, -17, -23, -11, -3, -41, -9, -39, 27, -73, 27, 25, 7, 34, 9, 56, -10, -26, -34, -19, -22, -2, 24, 28, -59, 2, 
  -23, 0, 14, -11, -18, -15, -14, -3, 8, 48, 19, 6, 1, -98, 36, -7, -25, -11, 10, -18, -29, -28, -26, 18, -3, -19, 20, 13, 32, -21, 21, 0, -22, -2, 61, -3, 40, -60, 44, -31, -7, 10, 29, 15, -14, -30, 68, -37, 2, -25, 8, 34, 1, -48, 7, -13, 6, 9, 14, 11, 36, 8, 6, -2, 
  -14, 7, 49, 14, -43, -4, 55, -2, 39, 23, -37, -12, 12, -83, 37, -16, 19, 13, -19, -12, -39, -30, 30, -46, 14, 9, 26, -4, 45, 6, -27, 5, -15, -29, 7, -20, 23, 29, 22, -6, 22, 50, -19, -11, 29, -27, -3, 14, 7, 7, 3, 53, -41, 19, 7, -104, -25, 12, 33, 6, -12, 22, -29, 5, 
  5, 1, -24, -13, 12, -8, 17, -23, 3, -9, 11, -31, -18, 24, -21, -20, 14, 15, -23, -25, -14, -11, -15, 23, -23, 10, -1, 6, -23, 14, 6, -11, 25, -22, -14, 16, -16, -3, 17, 26, -21, 5, 2, 14, -16, 9, -9, -18, -4, 15, 3, -3, -17, 8, -12, 25, 13, 16, 15, -15, -23, -31, -27, 4, 
  27, 18, 9, 42, -66, -35, -7, 37, -4, -35, 41, 38, 22, -22, 2, 2, -15, 11, 3, -8, -14, 34, 19, 30, 3, -23, 29, 22, -34, 1, 1, -27, 19, 47, -1, -45, -41, 31, 17, 19, -10, 31, -5, -14, 14, -32, 32, -12, -94, 6, -8, -59, -69, 28, 10, 17, 59, 37, 4, 29, 40, 25, -9, 45, 
  -10, 16, -27, 10, -1, -30, -33, -12, 3, -16, -8, 19, -1, -12, 11, -28, 8, 26, 25, -22, 6, 3, -2, 12, 8, -26, 18, -41, -29, 8, -22, -26, 28, 17, 19, -2, -23, 30, 13, 12, -48, -13, -25, 11, -6, -29, -19, -36, 8, -6, -41, -17, 23, -5, 28, -6, -18, 11, -23, 9, -30, 19, -24, 31, 
  -29, -7, -24, 21, 28, -18, -16, 29, 8, 12, -22, -19, -2, -12, -7, 4, 28, -45, 2, 9, -1, 21, -16, -5, 15, -26, -16, -19, -22, 3, 14, 12, 13, 0, -15, 5, 14, 11, 2, -2, 3, -25, 4, 25, 11, 28, 26, 6, -39, -29, 16, 15, 15, -27, 11, 46, -20, -27, -24, -8, -18, -28, -15, -11, 
  -35, -70, -16, -5, -25, 31, 10, 25, 19, -30, -47, -4, -2, -2, -16, -14, -14, -36, 26, -36, 27, 2, 15, 42, 10, -30, -17, 22, -26, 16, 19, -7, 20, -8, 36, -23, -20, 23, 13, -6, 14, 26, 6, -21, 7, -6, 15, -39, 1, 3, -20, -15, -32, 24, 3, 0, -4, -18, 17, -12, 43, 48, -27, -2, 
  12, -29, -14, 23, 10, -21, 5, 34, -25, -42, -9, -8, -9, 9, -33, -33, 21, 36, -5, -34, -14, -30, -16, -5, -11, 47, 7, 7, -32, -37, -27, -22, 4, 10, -17, -22, 3, -10, -17, -29, 18, 34, 35, 35, -13, -10, -15, 39, 31, 3, 0, 39, 35, -66, 8, 15, 19, -10, -29, 23, -45, -33, -12, 29, 
  14, 11, -32, 0, 2, -10, 2, -6, 9, -10, 9, -20, 11, -32, 5, 14, 21, -4, -22, 15, 23, -6, 24, -18, -3, 14, -14, -1, 15, 9, -19, 28, -24, 15, -6, 15, 5, -23, 2, -12, 11, 15, 0, 0, 3, -20, -30, -10, -18, 0, -16, -24, -21, -18, -11, -15, -21, -10, -23, 29, -29, -13, -28, -1, 
  5, 40, 9, 33, 10, 22, -46, -37, 36, 24, 13, 12, -17, 90, -19, -25, -18, -40, 2, -1, -31, 32, 2, 62, -38, -20, -20, -95, 13, -9, -21, -10, -18, 37, -29, -16, 25, 24, 15, -31, 12, 3, 32, 13, -1, 29, -29, 51, 11, -8, -66, 23, -3, -27, 26, 13, -72, -11, -64, -10, -81, -21, 20, -28, 
  -39, 19, -10, 25, 13, 14, -30, -19, -18, 5, 50, 2, -31, 29, -6, -37, -26, 8, 18, 38, 23, -26, 22, -26, -6, -31, -26, -59, 36, -30, 10, -28, -15, 61, -54, -11, -13, 33, 30, 20, 38, -6, 49, 27, 16, 101, 25, 15, 21, 43, -47, 2, -13, -13, 16, 18, 4, -22, -40, 10, -47, 30, 28, 8, 
  9, -17, -29, 13, 1, 21, -1, -33, -19, -34, 37, 21, -37, 31, 13, 4, -27, 28, 6, -60, 48, 33, -3, 11, -14, -33, 22, 18, -18, 15, -6, -29, -16, 80, -6, -45, -22, 47, -12, -19, -14, 36, 10, -16, -6, 20, 31, -11, -4, 2, 15, 29, 17, 59, -8, 56, -9, 37, -24, -23, -50, -14, 20, 16, 
  20, 21, -35, -4, -4, -40, -58, -11, 43, 50, -4, 59, 26, -4, -24, 16, 27, 62, 45, 49, -12, 15, -24, -35, -61, 16, -6, -8, -12, -28, -12, -21, -18, 64, -27, 35, -27, -64, 4, 27, 13, 10, 10, -38, -9, 87, -22, -3, 54, -56, -16, 39, -9, -26, 2, -75, 13, -11, -3, 29, 24, -2, -19, -7, 
  -21, -2, 10, -12, 11, 5, 42, 14, 14, 23, 3, -5, -41, -32, -20, 20, 4, -26, -9, -21, -12, 5, 1, -6, -17, -43, -19, -32, -8, 20, -1, -5, -27, 12, -15, -2, -19, -1, -21, 21, 24, -25, -48, -7, -17, -55, 14, -24, 7, 23, -24, 14, -1, 15, -6, -13, 2, 17, 21, -17, -18, 30, 20, -9, 
  53, -38, 5, -2, 14, 32, 69, 0, 76, 42, -27, -3, -2, 46, -14, 8, -23, -14, 46, 56, -20, -22, 6, -3, -14, -5, -26, 39, -25, -15, 14, -17, 22, 1, -57, 27, -43, 19, -30, -17, -85, 5, -28, -50, 12, 7, -37, 47, 16, 11, 5, -25, -24, 13, -14, -3, 13, -68, 2, 5, -33, 22, -23, -11, 
  -4, -38, 19, -75, -4, -11, -26, 7, -67, -69, -8, -35, 32, -51, 35, -5, 7, 19, 22, -32, 16, -16, 10, -31, -53, 6, -7, 3, 20, -39, -11, -8, -4, -87, 33, 34, -11, -77, 24, 12, 0, 20, -6, 47, -1, -70, -11, -13, 41, -4, 28, 24, 6, 0, -4, -9, 28, 28, 5, -1, -6, 40, 17, 0, 
  -7, -23, 26, -72, 44, -2, 22, -3, -35, -104, 5, 0, 25, -70, 14, 12, -17, -11, -8, 6, -10, -29, 25, -47, -25, -3, 16, 29, 18, -81, 18, -17, 27, -53, 7, 46, 21, -60, 7, -8, 13, 49, -10, -27, 25, -82, -20, 9, 12, -5, 30, -9, 6, -16, 15, -8, 25, 23, -7, -4, -13, 24, -18, -39, 
  -70, -48, 26, -33, -10, -4, -4, 28, -10, -86, -77, -26, 24, 53, 3, 37, -25, 36, -64, -127, 30, 16, -19, -60, -20, 32, -6, 24, -18, -1, 13, 24, -2, -24, 2, 25, -11, -13, -68, -2, -19, 9, -36, 23, 21, 35, -95, -29, -10, -78, -11, 40, -69, 6, 0, -24, -1, 35, -15, 7, -32, -8, -30, -58, 
  40, 13, 30, 17, 2, 21, 63, -24, 84, 34, 18, 40, -4, 36, 1, 2, 26, -55, -5, 52, -42, -36, 13, -2, -23, -70, 20, 22, 37, -3, -2, -7, -15, -32, -52, 45, -27, 43, 6, -31, -21, -18, 3, -90, 27, -26, -2, 38, -33, -23, 23, -18, -3, 23, -21, 12, -17, -46, -4, -14, 15, -7, -35, 17, 
  -20, 21, -18, 9, -120, -1, -34, -31, -36, -7, -16, 18, -29, 5, 26, -10, 23, -25, -14, -3, -28, 20, -29, 47, -7, -65, 28, -67, 16, 40, 19, 1, 9, -55, -2, 18, 26, 52, 9, 9, 17, 34, 38, 17, -29, 37, -14, -7, -29, -4, -57, -5, -4, 16, 20, 71, 61, 15, -9, 9, -11, 25, 26, 14, 
};
const TfArray<2, int> tensor_dimension5 = { 2, { 64,64 } };
const TfArray<1, float> quant5_scale = { 1, { 0.0073856581002473831, } };
const TfArray<1, int> quant5_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant5 = { (TfLiteFloatArray*)&quant5_scale, (TfLiteIntArray*)&quant5_zero, 0 };
const ALIGN(16) int32_t tensor_data6[64] = { -220, 609, 1267, 509, -8, -442, -22, -679, 841, -2251, -1162, 381, -440, -753, 2308, -955, -1702, 2810, 2715, 0, -470, -26, 3568, 1908, 9, 493, -1477, -506, -1651, -1627, -465, 633, 1267, 499, 5197, -891, -852, -980, 1744, -518, 2527, -1465, -963, 4072, 329, 1653, -440, -990, -524, -113, -38, -138, -599, 551, -691, -639, 2311, -154, 5548, -506, -252, -601, 4317, -1370, };
const TfArray<1, int> tensor_dimension6 = { 1, { 64 } };
const TfArray<1, float> quant6_scale = { 1, { 7.1824986662250012e-05, } };
const TfArray<1, int> quant6_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant6 = { (TfLiteFloatArray*)&quant6_scale, (TfLiteIntArray*)&quant6_zero, 0 };
const ALIGN(16) int8_t tensor_data7[32*64] = { 
  9, 22, -11, 65, -5, -21, -35, -22, 20, 30, -3, -43, -9, 25, -55, -34, 9, 56, -27, 22, 24, 17, -33, -39, 6, 19, 16, 12, 1, 28, 14, 21, -6, 21, -26, 47, 10, 5, -70, -46, -58, 43, 1, -20, 11, 40, 18, -61, -2, -22, -5, 42, -6, -32, 21, 45, -26, 12, -83, 20, 0, 83, -49, -62, 
  -10, 21, 52, -61, -48, 21, 1, -23, -1, 47, 6, 39, -10, 20, -27, -3, 8, 32, 34, 6, -17, 46, -12, -11, 33, 17, 68, -3, 9, 12, -1, -20, -3, -39, -44, -22, 16, -46, 9, 35, 39, -28, -15, -1, -13, -52, 24, -2, -10, -34, 19, -5, -8, -38, 6, -24, 27, -9, 16, 13, -24, 28, -12, -52, 
  -16, -9, -23, 18, -9, -24, -8, -14, -10, 16, -16, -35, 7, -2, 22, -24, 20, -4, 41, -24, -34, 28, 10, 32, 20, -58, -7, 18, -10, 13, 18, -18, -28, -16, 24, 24, -5, -19, 21, 18, 35, 6, -35, -7, -5, -19, 29, -3, -10, -5, 24, -19, 14, -17, -23, -6, 9, 24, 39, 0, -84, -23, -6, -52, 
  12, -39, 17, -2, 57, 19, 1, -22, -11, 9, -25, -31, -23, 9, -26, 16, 73, -47, 73, 8, -11, 27, 7, 7, 25, 43, 88, 20, -53, 49, -31, 13, 3, -42, 18, 8, -16, -32, 0, -7, 11, 30, 35, -42, 4, 34, -7, 25, 36, 4, -38, 20, -25, 18, 28, 31, 55, -21, 45, -31, 16, -74, 41, 9, 
  20, -15, -8, -4, 17, -8, -23, -19, 12, -1, -18, 13, -14, -12, -4, -21, -12, 9, 9, -19, -30, -12, -18, 6, 26, -34, 2, 5, -16, -31, 0, -16, -27, -17, -8, -10, -35, -8, 23, 6, -13, -13, -15, -4, -33, -6, 6, 2, -3, -11, -21, 10, 7, 23, -14, -3, -17, 22, -1, 12, -30, -21, -30, -23, 
  -25, -15, 24, 7, -37, 20, 22, 1, 49, -9, -4, 1, -10, -23, -5, -16, 53, 16, 8, -9, -48, 55, -32, 52, 50, -84, -5, -6, -14, 36, 4, -62, -12, 71, -69, -35, 4, 51, -11, -51, -47, -53, 42, -21, -22, -37, 27, 45, -17, 17, -13, 8, -28, -47, 5, 32, -11, 47, -27, 30, 23, -12, -27, -12, 
  -11, -24, -9, 14, 15, -30, 27, -1, -31, -27, -14, -3, -12, -8, -10, -1, 23, -41, 18, 28, -10, 7, -25, 4, -27, 10, -30, 7, -18, -12, 10, -37, -5, 24, 22, -11, -5, -26, 13, 16, -20, -36, 11, -38, -6, -16, -9, -14, 7, -29, 4, 5, -12, 16, 7, 10, -5, -22, 2, 20, -12, -26, -20, 12, 
  24, -15, 2, -30, -11, -4, 34, 15, 30, 30, -17, 24, -2, -22, 14, -12, 5, -14, 1, -18, 17, 11, 24, 15, 19, 33, 35, -28, 4, 13, -5, 4, -42, -15, -50, 6, 28, -8, 13, -1, 12, 4, -1, 0, 15, -18, -10, -18, 23, -18, 27, 18, 12, 9, -2, 16, 11, 4, 24, -12, -8, -11, -10, -47, 
  -24, -24, 18, -54, -45, -51, -36, -4, -40, -21, -33, 10, -31, 13, 43, 21, 47, 41, 6, -18, 26, -4, 11, 58, 26, 17, 16, -19, 20, -1, 11, -34, 11, 29, -9, 27, -31, -16, 13, -24, -70, 30, 30, 27, 20, 32, 29, 20, -26, -39, 1, -37, -12, 2, -22, 12, -27, 14, 13, 45, 15, -37, -14, -12, 
  2, -4, -8, -69, -66, 27, 29, 10, 32, -46, -29, 19, 10, -10, -24, -11, 12, 35, -5, 23, -7, 38, 2, -14, 10, -26, -15, 40, -93, -38, -25, -17, -77, -16, 10, -65, -29, -34, -10, 59, 55, -2, -2, 18, -3, -35, -27, -2, 8, -5, 45, 54, -11, -1, 11, -40, 40, 23, -12, 3, 19, -36, 4, 7, 
  -27, 48, -22, 8, -46, 6, -16, 21, -60, -46, -22, -24, -4, -2, -5, -39, -53, 2, -3, -26, -30, -34, 6, -21, -2, 9, -45, 4, 27, -12, 26, 28, -40, 41, 38, -59, -31, 6, -57, 26, 40, 29, -15, 19, -1, 38, 27, 11, -28, -21, 42, 22, -24, -38, -34, -14, 36, 41, -57, 44, -52, 111, 21, -27, 
  11, -37, 14, -19, -18, -41, -20, 8, -4, 6, 9, -37, -6, 24, 0, 16, -7, 15, -12, 23, 22, 13, -17, 2, -24, 8, -16, -33, 15, -25, -28, -11, 5, 20, -36, -28, 11, -12, 19, 10, -9, -23, -40, -41, -41, 1, -6, -11, -12, 11, 27, -7, 26, 13, 17, 26, -45, -17, -10, 0, -14, 7, -46, -19, 
  -15, 38, -2, 14, 49, 11, 40, 15, -10, -46, 8, -80, -26, 16, 11, 42, 3, 18, -12, -1, -15, -10, -7, -18, -45, -40, 34, -10, -1, 28, -25, 29, -70, -29, -16, 12, 22, -14, 27, -28, 64, 17, -29, 32, 36, 10, 19, 10, 34, 9, 11, 13, -2, 78, 38, 4, 33, -24, 4, -9, -26, -53, 11, 30, 
  -23, 25, -7, -40, -13, 38, 39, -24, -3, 27, -17, -13, 0, 21, 20, 5, 57, 29, -4, -9, -21, -1, 15, 28, 87, -5, 2, 19, -17, 48, 17, 23, 86, 5, 26, 20, 0, -15, 8, 2, -45, 39, 9, 40, 26, 7, -10, 48, -1, 15, -29, 29, 1, -48, -15, -21, -36, 23, -53, -18, -6, -44, 11, -61, 
  -26, 33, 24, -11, 14, 39, 9, 30, 39, -18, 3, 22, -12, -16, -25, 12, -10, -16, -18, -6, 22, -18, -2, 11, -18, 20, 10, 14, -13, 7, 19, -12, -38, -31, 27, -76, -30, -41, 8, 13, 34, -15, 54, 3, 14, -26, -2, 19, 23, 38, 9, 18, 32, 5, 15, 14, 6, -17, 27, 41, 45, -21, 45, -35, 
  -27, 10, 11, 27, 28, 11, -29, -17, -13, 32, -83, 25, 14, -9, -1, 6, 58, -34, 36, -8, -1, -15, -54, -82, 7, 11, 44, 24, -31, 17, 28, -66, 55, 53, -34, -60, 28, -68, 61, 50, 57, -46, -3, -16, -68, -125, -27, -20, -17, -24, 23, 7, -13, 11, -58, 25, 13, 1, 7, -25, 9, 18, 23, 18, 
  -7, 22, 46, -20, -84, -41, -4, -29, 4, -22, -69, 3, -2, -24, 43, -50, -28, 58, 1, -7, -34, 49, 9, 11, -15, -1, -110, -21, -4, -1, 25, -37, -29, -15, -9, 12, 17, -25, -30, -42, -20, -20, -21, 31, -2, 12, 1, 18, -51, -24, 7, -32, -5, -2, 34, 7, -43, 18, 9, -17, -64, 26, 15, -16, 
  -29, -6, -8, -24, -21, -1, -4, -8, 28, -34, 35, -8, 30, -1, -7, 4, -40, -22, -49, -6, 40, 45, -4, -32, 10, -18, 48, 50, 5, 14, 14, 18, -99, -24, 23, -2, 25, 7, -10, 72, -17, 9, 27, 25, 50, 20, -29, -28, 15, 25, -3, 45, 25, -14, -32, -8, 36, -12, -37, 26, 2, 34, 26, -61, 
  3, 33, -25, -33, -10, 36, 22, -14, 12, 9, 10, 29, 5, 17, -29, 5, -68, -15, -31, 5, -5, 1, 9, -37, 7, 31, -5, 1, -1, 32, 13, 12, -38, -4, 6, -16, 13, 27, -13, 60, 12, -32, 24, 19, -6, 27, 3, -12, -10, -3, -28, 24, -12, -35, 42, -15, 1, 7, -40, 5, 24, 66, -34, 6, 
  16, -61, 29, -24, 8, -6, -25, -2, 39, 27, -24, 20, -11, 25, -4, -1, -28, -26, -50, -21, 18, -27, 17, -19, -37, -38, -51, 6, -25, -39, 20, 16, -93, 15, 28, -69, -2, 20, 42, 3, -14, -72, 15, -16, -4, 5, 18, -30, 8, 10, 24, 4, -6, 5, -27, -92, 1, -24, 60, -9, 7, -4, 21, 34, 
  -30, 23, -14, -32, 3, -10, 24, -11, 3, -8, -5, -6, 26, 11, 21, -21, 1, -3, 1, -14, 10, 16, -14, -20, -27, -19, 24, -33, 14, -15, 5, 7, -16, 23, 10, -14, -29, -12, 3, 6, -27, -12, -10, -30, -8, -24, -27, -25, 3, 8, 0, -31, -24, -4, -23, -1, 23, 20, -14, -35, 2, 23, 13, -33, 
  -30, -22, -14, 36, 13, 16, 11, -28, 20, 15, 16, -14, 0, -22, 1, 2, -9, 18, 47, -29, 18, -24, -13, 19, -19, 45, 37, 1, 8, 22, -26, 21, 34, 22, 15, -15, -23, 4, -11, -1, 4, -15, 8, -23, -29, 14, 3, 0, 16, -1, -7, -51, 5, 22, 60, 35, 23, -34, 44, -25, 9, 123, 32, 65, 
  -30, 7, 8, -30, 31, 7, 6, -11, 14, 6, -22, -6, 26, 10, 3, 1, 23, -22, -10, 30, 17, -20, 22, 21, 7, -36, 6, 11, -8, -15, -11, 16, -1, 46, -26, -29, -1, 13, -33, 7, -1, 25, 11, 24, -8, -19, -16, -21, -6, 16, -21, 26, 4, 29, 18, 10, -23, 4, -8, -14, -8, -1, -14, 25, 
  5, -39, -32, 16, -1, 9, 9, 13, 30, 19, 11, -31, 29, -9, 2, 77, 41, 7, -10, -30, 38, 18, 31, 18, -14, -14, -7, 36, -21, -44, -21, 9, 48, 9, 16, 74, 1, 35, 35, 14, 37, 11, -25, -9, 13, 12, 11, -34, 56, -19, 67, 20, 26, 43, -14, 46, -9, -2, -22, 40, 46, 26, 9, 60, 
  22, 51, -6, -64, -63, 4, -27, 14, -99, -37, -31, -12, 23, -17, 48, -27, -11, 48, 37, 9, 31, 17, 36, -13, -15, -62, -92, 25, -56, 11, -3, 11, -36, -14, 16, 23, 10, -39, -6, -30, 103, -2, -62, 50, 13, -5, 13, 4, 14, -20, 34, -4, -32, 12, 5, 39, 47, 21, -49, -12, -99, -45, -11, -41, 
  12, -19, -8, 15, 17, -10, -33, -12, 44, 41, 2, 37, -20, 17, -14, 52, 34, -40, 8, 6, 51, 33, -86, 9, -26, -13, -34, -8, 45, -5, -18, 15, 20, 22, -11, -23, 24, 3, 2, -44, -16, -39, -19, -20, -18, 12, -26, 15, -13, -50, -29, 5, -4, 77, -7, 43, 50, -25, 27, -19, 13, -21, -37, 40, 
  -26, 17, 14, 34, -66, 16, -29, -8, 35, 20, -36, 48, -19, 4, 19, -43, -39, 45, 34, 26, 12, 54, 0, 15, 30, 8, -88, 8, -33, -15, -1, -13, 71, 43, 51, 50, -29, 19, -44, 7, 43, -28, 6, 0, -20, 22, 6, -3, 22, -26, -42, 20, 12, -53, -10, 84, 8, -18, 14, -21, -42, -49, 6, -3, 
  -13, -19, -79, -35, 22, 30, 3, 13, -11, 53, 18, -8, -2, -4, -3, 19, 62, -40, 23, 17, -14, -10, 20, 44, 30, -9, 41, 48, -75, -8, 25, 34, 4, -24, 14, 6, 7, 21, 6, -14, 10, 19, 10, -1, 44, 18, 2, -1, 5, 46, 18, 62, -28, 13, -1, 32, 18, 38, -29, 29, -4, -78, -44, 19, 
  24, -40, -37, -5, -43, 7, 8, -28, 33, -83, 30, -9, 11, -18, 28, 49, 15, 27, -4, -3, 44, -20, 51, 22, -8, -25, -16, 4, -33, -16, 21, -36, -11, -15, 22, -25, 17, -10, 24, -1, -55, 38, 40, 47, 22, 23, 2, 37, 3, 23, 50, -20, 24, 16, -48, -28, -29, 8, 60, 20, 50, -127, 43, 4, 
  14, 16, 6, 13, 6, 3, 45, 4, -23, -32, 33, 2, -28, -23, 0, -25, 10, -69, 54, -6, -16, -23, -33, -25, 39, 70, 7, 6, 15, 57, 5, 43, 66, -27, 23, -1, 38, 30, -33, -34, -52, 32, 58, -25, 7, 57, -4, 26, -18, -11, -23, -26, -4, -52, -7, 19, 25, -19, -21, -6, 14, 18, 11, -9, 
  -3, 60, 20, -50, -52, 20, 35, 12, -3, -21, 21, 26, 22, 7, -7, -53, -29, 30, -38, -8, -35, -13, -19, 7, 41, -20, -43, 23, 12, -17, 0, 38, -63, 9, -11, -11, -27, 11, -15, 11, -36, -2, 26, 55, 37, 34, -7, 27, 7, 1, 13, -14, 1, -58, 11, -7, 4, 4, 2, 33, 14, 0, 6, -57, 
  -12, -41, -14, -31, 4, -24, 0, -5, -19, 42, -1, 13, -16, -24, -26, 20, -11, 6, -1, 1, 27, 39, 6, 19, -9, 15, -21, 34, -36, -76, 2, 18, -25, 31, 11, -10, 16, 7, 67, 20, 15, 19, -19, 32, -24, -13, -2, -51, 32, 9, -18, -17, 2, -14, -25, -12, -32, 34, -4, 30, 29, 29, 13, -3, 
};
const TfArray<2, int> tensor_dimension7 = { 2, { 32,64 } };
const TfArray<1, float> quant7_scale = { 1, { 0.008160117082297802, } };
const TfArray<1, int> quant7_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant7 = { (TfLiteFloatArray*)&quant7_scale, (TfLiteIntArray*)&quant7_zero, 0 };
const ALIGN(16) int32_t tensor_data8[32] = { -932, 81, 711, -416, -603, -1772, -870, 233, 764, 295, 988, -867, 998, -43, 1625, -189, 650, 478, -1276, 3006, -237, 587, 147, 577, 1818, 47, 2311, -446, 1568, 302, 945, 710, };
const TfArray<1, int> tensor_dimension8 = { 1, { 32 } };
const TfArray<1, float> quant8_scale = { 1, { 0.0001207411041832529, } };
const TfArray<1, int> quant8_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant8 = { (TfLiteFloatArray*)&quant8_scale, (TfLiteIntArray*)&quant8_zero, 0 };
const ALIGN(16) int8_t tensor_data9[9*32] = { 
  -65, 59, -51, -4, -15, -6, -34, -51, 40, -55, 41, -22, -47, 44, -32, 38, -46, 2, -15, -102, -24, -26, 0, 41, -36, -15, -47, 34, 49, -23, 1, 36, 
  -48, 25, -70, -29, -11, 23, 16, 7, -22, 53, 33, -14, -1, 34, 29, -65, -21, 30, 19, -8, -38, -46, -37, -33, 15, -5, -27, -13, 6, -9, 43, -40, 
  67, -24, -12, -14, 19, 47, -29, 19, -36, -53, 18, -57, -58, -72, -84, -127, -9, 29, 14, -52, -8, 21, -33, 33, 4, -66, -43, 9, -19, 15, 3, -24, 
  -35, 7, -36, 14, 28, -77, 5, 3, -17, 5, -33, -36, 26, -51, 37, -12, -9, 10, -26, 67, -29, 35, -15, 34, 17, 0, -34, 14, 17, -37, -17, 25, 
  -15, 17, 32, 17, -24, -42, 18, 17, 30, -4, -37, -19, -55, 10, 4, -52, 29, -53, -6, -17, 33, 44, -28, -26, -47, 34, 46, -2, -34, 37, -32, 40, 
  -4, -40, 50, -78, -27, 13, -40, -32, 11, -22, 18, 13, -5, 7, -24, -1, 5, 18, -17, 27, -34, -37, 13, 47, 50, 65, 50, -10, 2, -89, 11, 20, 
  19, -60, 29, -28, -23, 65, 38, -25, 39, -5, -71, -32, 9, -12, 16, 27, 68, -25, -29, 17, -3, 12, -33, -38, 40, 5, 1, -100, 51, 25, 25, 36, 
  33, 3, -24, 29, 12, 17, 23, 13, 4, 29, -19, 13, 2, 13, -50, -20, 23, 28, -46, 32, 13, -17, -43, 22, -9, 3, -28, 41, 0, -15, -6, -61, 
  -17, 53, 16, 32, -26, -4, -1, 6, -39, 32, -32, -45, -65, 54, 29, 63, -34, -17, -14, 3, -16, -17, -12, -12, -103, -4, 13, 9, -41, -12, -73, 46, 
};
const TfArray<2, int> tensor_dimension9 = { 2, { 9,32 } };
const TfArray<1, float> quant9_scale = { 1, { 0.010304183699190617, } };
const TfArray<1, int> quant9_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant9 = { (TfLiteFloatArray*)&quant9_scale, (TfLiteIntArray*)&quant9_zero, 0 };
const ALIGN(16) int32_t tensor_data10[9] = { -173, -328, -293, 235, 139, 676, 818, -51, -883, };
const TfArray<1, int> tensor_dimension10 = { 1, { 9 } };
const TfArray<1, float> quant10_scale = { 1, { 0.00024627195671200752, } };
const TfArray<1, int> quant10_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant10 = { (TfLiteFloatArray*)&quant10_scale, (TfLiteIntArray*)&quant10_zero, 0 };
const TfArray<2, int> tensor_dimension11 = { 2, { 1,64 } };
const TfArray<1, float> quant11_scale = { 1, { 0.0099678486585617065, } };
const TfArray<1, int> quant11_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant11 = { (TfLiteFloatArray*)&quant11_scale, (TfLiteIntArray*)&quant11_zero, 0 };
const TfArray<2, int> tensor_dimension12 = { 2, { 1,64 } };
const TfArray<1, float> quant12_scale = { 1, { 0.0097249271348118782, } };
const TfArray<1, int> quant12_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant12 = { (TfLiteFloatArray*)&quant12_scale, (TfLiteIntArray*)&quant12_zero, 0 };
const TfArray<2, int> tensor_dimension13 = { 2, { 1,64 } };
const TfArray<1, float> quant13_scale = { 1, { 0.014796491712331772, } };
const TfArray<1, int> quant13_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant13 = { (TfLiteFloatArray*)&quant13_scale, (TfLiteIntArray*)&quant13_zero, 0 };
const TfArray<2, int> tensor_dimension14 = { 2, { 1,32 } };
const TfArray<1, float> quant14_scale = { 1, { 0.023900192230939865, } };
const TfArray<1, int> quant14_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant14 = { (TfLiteFloatArray*)&quant14_scale, (TfLiteIntArray*)&quant14_zero, 0 };
const TfArray<2, int> tensor_dimension15 = { 2, { 1,9 } };
const TfArray<1, float> quant15_scale = { 1, { 0.081546373665332794, } };
const TfArray<1, int> quant15_zero = { 1, { 40 } };
const TfLiteAffineQuantization quant15 = { (TfLiteFloatArray*)&quant15_scale, (TfLiteIntArray*)&quant15_zero, 0 };
const TfArray<2, int> tensor_dimension16 = { 2, { 1,9 } };
const TfArray<1, float> quant16_scale = { 1, { 0.00390625, } };
const TfArray<1, int> quant16_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant16 = { (TfLiteFloatArray*)&quant16_scale, (TfLiteIntArray*)&quant16_zero, 0 };
const TfLiteFullyConnectedParams opdata0 = { kTfLiteActRelu, kTfLiteFullyConnectedWeightsFormatDefault, false, false };
const TfArray<3, int> inputs0 = { 3, { 0,1,2 } };
const TfArray<1, int> outputs0 = { 1, { 11 } };
const TfLiteFullyConnectedParams opdata1 = { kTfLiteActRelu, kTfLiteFullyConnectedWeightsFormatDefault, false, false };
const TfArray<3, int> inputs1 = { 3, { 11,3,4 } };
const TfArray<1, int> outputs1 = { 1, { 12 } };
const TfLiteFullyConnectedParams opdata2 = { kTfLiteActRelu, kTfLiteFullyConnectedWeightsFormatDefault, false, false };
const TfArray<3, int> inputs2 = { 3, { 12,5,6 } };
const TfArray<1, int> outputs2 = { 1, { 13 } };
const TfLiteFullyConnectedParams opdata3 = { kTfLiteActRelu, kTfLiteFullyConnectedWeightsFormatDefault, false, false };
const TfArray<3, int> inputs3 = { 3, { 13,7,8 } };
const TfArray<1, int> outputs3 = { 1, { 14 } };
const TfLiteFullyConnectedParams opdata4 = { kTfLiteActNone, kTfLiteFullyConnectedWeightsFormatDefault, false, false };
const TfArray<3, int> inputs4 = { 3, { 14,9,10 } };
const TfArray<1, int> outputs4 = { 1, { 15 } };
const TfLiteSoftmaxParams opdata5 = { 1 };
const TfArray<1, int> inputs5 = { 1, { 15 } };
const TfArray<1, int> outputs5 = { 1, { 16 } };
const TensorInfo_t tensorData[] = {
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 0, (TfLiteIntArray*)&tensor_dimension0, 156, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant0))}, },
  { kTfLiteMmapRo, kTfLiteInt8, (void*)tensor_data1, (TfLiteIntArray*)&tensor_dimension1, 9984, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant1))}, },
  { kTfLiteMmapRo, kTfLiteInt32, (void*)tensor_data2, (TfLiteIntArray*)&tensor_dimension2, 256, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant2))}, },
  { kTfLiteMmapRo, kTfLiteInt8, (void*)tensor_data3, (TfLiteIntArray*)&tensor_dimension3, 4096, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant3))}, },
  { kTfLiteMmapRo, kTfLiteInt32, (void*)tensor_data4, (TfLiteIntArray*)&tensor_dimension4, 256, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant4))}, },
  { kTfLiteMmapRo, kTfLiteInt8, (void*)tensor_data5, (TfLiteIntArray*)&tensor_dimension5, 4096, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant5))}, },
  { kTfLiteMmapRo, kTfLiteInt32, (void*)tensor_data6, (TfLiteIntArray*)&tensor_dimension6, 256, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant6))}, },
  { kTfLiteMmapRo, kTfLiteInt8, (void*)tensor_data7, (TfLiteIntArray*)&tensor_dimension7, 2048, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant7))}, },
  { kTfLiteMmapRo, kTfLiteInt32, (void*)tensor_data8, (TfLiteIntArray*)&tensor_dimension8, 128, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant8))}, },
  { kTfLiteMmapRo, kTfLiteInt8, (void*)tensor_data9, (TfLiteIntArray*)&tensor_dimension9, 288, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant9))}, },
  { kTfLiteMmapRo, kTfLiteInt32, (void*)tensor_data10, (TfLiteIntArray*)&tensor_dimension10, 36, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant10))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 160, (TfLiteIntArray*)&tensor_dimension11, 64, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant11))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 64, (TfLiteIntArray*)&tensor_dimension12, 64, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant12))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 0, (TfLiteIntArray*)&tensor_dimension13, 64, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant13))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 64, (TfLiteIntArray*)&tensor_dimension14, 32, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant14))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 16, (TfLiteIntArray*)&tensor_dimension15, 9, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant15))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 0, (TfLiteIntArray*)&tensor_dimension16, 9, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant16))}, },
};const NodeInfo_t nodeData[] = {
  { (TfLiteIntArray*)&inputs0, (TfLiteIntArray*)&outputs0, const_cast<void*>(static_cast<const void*>(&opdata0)), OP_FULLY_CONNECTED, },
  { (TfLiteIntArray*)&inputs1, (TfLiteIntArray*)&outputs1, const_cast<void*>(static_cast<const void*>(&opdata1)), OP_FULLY_CONNECTED, },
  { (TfLiteIntArray*)&inputs2, (TfLiteIntArray*)&outputs2, const_cast<void*>(static_cast<const void*>(&opdata2)), OP_FULLY_CONNECTED, },
  { (TfLiteIntArray*)&inputs3, (TfLiteIntArray*)&outputs3, const_cast<void*>(static_cast<const void*>(&opdata3)), OP_FULLY_CONNECTED, },
  { (TfLiteIntArray*)&inputs4, (TfLiteIntArray*)&outputs4, const_cast<void*>(static_cast<const void*>(&opdata4)), OP_FULLY_CONNECTED, },
  { (TfLiteIntArray*)&inputs5, (TfLiteIntArray*)&outputs5, const_cast<void*>(static_cast<const void*>(&opdata5)), OP_SOFTMAX, },
};
static std::vector<void*> overflow_buffers;
static void * AllocatePersistentBuffer(struct TfLiteContext* ctx,
                                       size_t bytes) {
  void *ptr;
  if (current_location - bytes < tensor_boundary) {
    // OK, this will look super weird, but.... we have CMSIS-NN buffers which
    // we cannot calculate beforehand easily.
    ptr = ei_calloc(bytes, 1);
    if (ptr == NULL) {
      printf("ERR: Failed to allocate persistent buffer of size %d\n", (int)bytes);
      return NULL;
    }
    overflow_buffers.push_back(ptr);
    return ptr;
  }

  current_location -= bytes;

  ptr = current_location;
  memset(ptr, 0, bytes);

  return ptr;
}
typedef struct {
  size_t bytes;
  void *ptr;
} scratch_buffer_t;
static std::vector<scratch_buffer_t> scratch_buffers;

static TfLiteStatus RequestScratchBufferInArena(struct TfLiteContext* ctx, size_t bytes,
                                                int* buffer_idx) {
  scratch_buffer_t b;
  b.bytes = bytes;

  b.ptr = AllocatePersistentBuffer(ctx, b.bytes);
  if (!b.ptr) {
    return kTfLiteError;
  }

  scratch_buffers.push_back(b);

  *buffer_idx = scratch_buffers.size() - 1;

  return kTfLiteOk;
}

static void* GetScratchBuffer(struct TfLiteContext* ctx, int buffer_idx) {
  if (buffer_idx > static_cast<int>(scratch_buffers.size()) - 1) {
    return NULL;
  }
  return scratch_buffers[buffer_idx].ptr;
}

static TfLiteTensor* GetTensor(const struct TfLiteContext* context,
                               int tensor_idx) {
  return &tflTensors[tensor_idx];
}

static TfLiteEvalTensor* GetEvalTensor(const struct TfLiteContext* context,
                                       int tensor_idx) {
  return &tflEvalTensors[tensor_idx];
}

} // namespace

TfLiteStatus trained_model_init( void*(*alloc_fnc)(size_t,size_t) ) {
#ifdef EI_CLASSIFIER_ALLOCATION_HEAP
  tensor_arena = (uint8_t*) alloc_fnc(16, kTensorArenaSize);
  if (!tensor_arena) {
    printf("ERR: failed to allocate tensor arena\n");
    return kTfLiteError;
  }
#else
  memset(tensor_arena, 0, kTensorArenaSize);
#endif
  tensor_boundary = tensor_arena;
  current_location = tensor_arena + kTensorArenaSize;
  ctx.AllocatePersistentBuffer = &AllocatePersistentBuffer;
  ctx.RequestScratchBufferInArena = &RequestScratchBufferInArena;
  ctx.GetScratchBuffer = &GetScratchBuffer;
  ctx.GetTensor = &GetTensor;
  ctx.GetEvalTensor = &GetEvalTensor;
  ctx.tensors = tflTensors;
  ctx.tensors_size = 17;
  for(size_t i = 0; i < 17; ++i) {
    tflTensors[i].type = tensorData[i].type;
    tflEvalTensors[i].type = tensorData[i].type;
    tflTensors[i].is_variable = 0;

#if defined(EI_CLASSIFIER_ALLOCATION_HEAP)
    tflTensors[i].allocation_type = tensorData[i].allocation_type;
#else
    tflTensors[i].allocation_type = (tensor_arena <= tensorData[i].data && tensorData[i].data < tensor_arena + kTensorArenaSize) ? kTfLiteArenaRw : kTfLiteMmapRo;
#endif
    tflTensors[i].bytes = tensorData[i].bytes;
    tflTensors[i].dims = tensorData[i].dims;
    tflEvalTensors[i].dims = tensorData[i].dims;

#if defined(EI_CLASSIFIER_ALLOCATION_HEAP)
    if(tflTensors[i].allocation_type == kTfLiteArenaRw){
      uint8_t* start = (uint8_t*) ((uintptr_t)tensorData[i].data + (uintptr_t) tensor_arena);

     tflTensors[i].data.data =  start;
     tflEvalTensors[i].data.data =  start;
    }
    else{
       tflTensors[i].data.data = tensorData[i].data;
       tflEvalTensors[i].data.data = tensorData[i].data;
    }
#else
    tflTensors[i].data.data = tensorData[i].data;
    tflEvalTensors[i].data.data = tensorData[i].data;
#endif // EI_CLASSIFIER_ALLOCATION_HEAP
    tflTensors[i].quantization = tensorData[i].quantization;
    if (tflTensors[i].quantization.type == kTfLiteAffineQuantization) {
      TfLiteAffineQuantization const* quant = ((TfLiteAffineQuantization const*)(tensorData[i].quantization.params));
      tflTensors[i].params.scale = quant->scale->data[0];
      tflTensors[i].params.zero_point = quant->zero_point->data[0];
    }
    if (tflTensors[i].allocation_type == kTfLiteArenaRw) {
      auto data_end_ptr = (uint8_t*)tflTensors[i].data.data + tensorData[i].bytes;
      if (data_end_ptr > tensor_boundary) {
        tensor_boundary = data_end_ptr;
      }
    }
  }
  if (tensor_boundary > current_location /* end of arena size */) {
    printf("ERR: tensor arena is too small, does not fit model - even without scratch buffers\n");
    return kTfLiteError;
  }
  registrations[OP_FULLY_CONNECTED] = Register_FULLY_CONNECTED();
  registrations[OP_SOFTMAX] = Register_SOFTMAX();

  for(size_t i = 0; i < 6; ++i) {
    tflNodes[i].inputs = nodeData[i].inputs;
    tflNodes[i].outputs = nodeData[i].outputs;
    tflNodes[i].builtin_data = nodeData[i].builtin_data;
tflNodes[i].custom_initial_data = nullptr;
      tflNodes[i].custom_initial_data_size = 0;
if (registrations[nodeData[i].used_op_index].init) {
      tflNodes[i].user_data = registrations[nodeData[i].used_op_index].init(&ctx, (const char*)tflNodes[i].builtin_data, 0);
    }
  }
  for(size_t i = 0; i < 6; ++i) {
    if (registrations[nodeData[i].used_op_index].prepare) {
      TfLiteStatus status = registrations[nodeData[i].used_op_index].prepare(&ctx, &tflNodes[i]);
      if (status != kTfLiteOk) {
        return status;
      }
    }
  }
  return kTfLiteOk;
}

static const int inTensorIndices[] = {
  0, 
};
TfLiteTensor* trained_model_input(int index) {
  return &ctx.tensors[inTensorIndices[index]];
}

static const int outTensorIndices[] = {
  16, 
};
TfLiteTensor* trained_model_output(int index) {
  return &ctx.tensors[outTensorIndices[index]];
}

TfLiteStatus trained_model_invoke() {
  for(size_t i = 0; i < 6; ++i) {
    TfLiteStatus status = registrations[nodeData[i].used_op_index].invoke(&ctx, &tflNodes[i]);

#if EI_CLASSIFIER_PRINT_STATE
    ei_printf("layer %lu\n", i);
    ei_printf("    inputs:\n");
    for (size_t ix = 0; ix < tflNodes[i].inputs->size; ix++) {
      auto d = tensorData[tflNodes[i].inputs->data[ix]];

      size_t data_ptr = (size_t)d.data;

      if (d.allocation_type == kTfLiteArenaRw) {
        data_ptr = (size_t)tensor_arena + data_ptr;
      }

      if (d.type == TfLiteType::kTfLiteInt8) {
        int8_t* data = (int8_t*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes; jx++) {
          ei_printf("%d ", data[jx]);
        }
      }
      else {
        float* data = (float*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes / 4; jx++) {
          ei_printf("%f ", data[jx]);
        }
      }
      ei_printf("\n");
    }
    ei_printf("\n");

    ei_printf("    outputs:\n");
    for (size_t ix = 0; ix < tflNodes[i].outputs->size; ix++) {
      auto d = tensorData[tflNodes[i].outputs->data[ix]];

      size_t data_ptr = (size_t)d.data;

      if (d.allocation_type == kTfLiteArenaRw) {
        data_ptr = (size_t)tensor_arena + data_ptr;
      }

      if (d.type == TfLiteType::kTfLiteInt8) {
        int8_t* data = (int8_t*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes; jx++) {
          ei_printf("%d ", data[jx]);
        }
      }
      else {
        float* data = (float*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes / 4; jx++) {
          ei_printf("%f ", data[jx]);
        }
      }
      ei_printf("\n");
    }
    ei_printf("\n");
#endif // EI_CLASSIFIER_PRINT_STATE

    if (status != kTfLiteOk) {
      return status;
    }
  }
  return kTfLiteOk;
}

TfLiteStatus trained_model_reset( void (*free_fnc)(void* ptr) ) {
#ifdef EI_CLASSIFIER_ALLOCATION_HEAP
  free_fnc(tensor_arena);
#endif
  scratch_buffers.clear();
  for (size_t ix = 0; ix < overflow_buffers.size(); ix++) {
    free(overflow_buffers[ix]);
  }
  overflow_buffers.clear();
  return kTfLiteOk;
}
